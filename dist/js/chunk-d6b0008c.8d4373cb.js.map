{"version":3,"sources":["webpack:///./src/views/Reports/ReportPage2_bk.vue?19a7","webpack:///src/views/Reports/ReportPage2_bk.vue","webpack:///./src/views/Reports/ReportPage2_bk.vue?0b88","webpack:///./src/views/Reports/ReportPage2_bk.vue","webpack:///./src/views/Reports/ReportPage2_bk.vue?c06f"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","TitleHeader","staticStyle","background-color","padding-top","margin-left","margin-right","height","overflow-y","overflow-x","padding-bottom","attrs","id","visible","margin-top","md","data-vv-scope","data-vv-value-path","_l","dataRow","idx","key","data","index","RowNo","isColumn","ColumnType","Label","_e","offset","response","parseInt","position","prop","cLabel","cLabelSize","cValue","cPageLevel","cTabIndex","cVisible","cClass","dataLookUp","LookUpCd","ColumnDB","LookUpDB","InitialWhere","LookUpInitialWhere2","ParamWhere","OrderBy","LookUpSortField","SourceField","sourceField","DisplayLookUp","ParamView","ParamViewLookUp2","cValidate","isRequired","cName","ParamName","cKey","cOrder","TabOrder","cTriggered","cDefault","cProtect","isDisabled","isVisible","cAsync","cFilter","cParentForm","cStatic","cOption","cDisplayColumn","DisplayColumn","cHideRowColumnCSS","cRowDisable","label","models","on","change","$event","OnLookUpChange","model","value","callback","$$v","$set","expression","ref","refInFor","MaxLength","cType","cDecimal","cLastLabel","cStyle","cIsAlwaysShow","input","OnInputTextChange","cFormat","valueFrom","split","trim","valueTo","from","OnDateRangeFrom","to","OnDateRangeTo","OnDateRangeFromInput","OnInputDateChange","toArray","setValue","cId","cRadioOptions","cRadioDefaultOption","cShowClearButton","OnInputRadioChange","cOptions","OnCheckBoxChange","text-align","text","icon","classButton","classIcon","styleButton","click","M_GenerateReport","directives","name","rawName","modifiers","collapse1","reportVisible","cSrc","dataUrl","staticRenderFns","ReportPage2_bkvue_type_script_lang_js_","PageLevel","TabIndex","reportParam","onChangeModels","RowData","watch","newData","oldData","$emit","$route.query.oid","fnLoadData","methods","paramName","end","paramNameToSet","hasChange","OnChangeTriggerField","onChangeField","length","x","indexField","map","zz","indexOf","idxMany","idSpliter","includes","SetColumnValue","momentDateFormat","paramDR","DR","colVal","idAct","dataAct","push","ColumnChange","ColValue","cv","lu","_cv","OnChangeTriggerInitialWhere","onChangeWhere","_x","indexFieldWhere","SetColumnWhere","newWhere","LookUpInitialWhere","splitInitialWhere","setWhere","sw","cols","iw","toUpperCase","replace","forReplace","match","RegExp","isWhere","idChange","substring","M_CheckParamView","$forceUpdate","_x2","momentDateFormatting","slot","_x3","M_ClearForm","_this","console","log","scopeForm","$validator","_base","validateAll","then","result","params","reportPath","PathReport","ReportName","paramToGetPath","OptionSeq","getOptionSeq","postEncode","getUrlConditionForReportPath","ress","Data","cond","forEach","state1","state2","state3","OptionFunctionCd","strParam","ParameterFunction","param","parm","i","p","GetParameter","FnDynamicFunction","dynamicData","ParamA","ValueA","ParamB","ValueB","ParamC","ValueC","ReportPath","yesno","isDT","isParam","DefaultValue","orderbyy","exst","varOrderBy","vob","varParam","slice","pN","idxPN","val","getUrlSaveParamTemp","Id","GenerateReportTemplate","loadData","_this2","SubPortfolioCd","getDataUser","UserId","getUrlParameterHTML","a","iWhere","ReplaceParameter","ParamViewLookUp","pView","pView2","pv","par","string","arrString","str","JSON","parse","GetPageInfo","_this3","Oid","getPageInfoByOption","ModuleName","TextMenu","arguments","undefined","PortfolioCd","PortfolioName","SubPortfolioName","Username","Address1","Address2","Address3","Address4","ZipCode","PhoneNo","FaxNo","Date","toString","getUrlReportBlankPage","beforeCreate","created","beforeMount","mounted","hideSideBarMenu","$store","commit","beforeUpdate","updated","beforeDestroy","destroyed","Reports_ReportPage2_bkvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ReportPage2_bk_vue_vue_type_style_index_0_id_6e3f1b54_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ReportPage2_bk_vue_vue_type_style_index_0_id_6e3f1b54_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-d6b0008c.8d4373cb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"height--full\"},[_c('div',{staticClass:\"header--content\"},[_c('div',{staticClass:\"header--content__breadcrumbs\"},[_vm._v(\"\\n      \"+_vm._s(_vm.TitleHeader)+\"\\n    \")])]),_c('div',{staticClass:\"content-app-form__body\",staticStyle:{\"background-color\":\"white\",\"padding-top\":\"1px !important\",\"margin-left\":\"15px\",\"margin-right\":\"15px\",\"height\":\"95%\",\"overflow-y\":\"auto\",\"overflow-x\":\"hidden\",\"padding-bottom\":\"1%\"}},[_c('b-collapse',{attrs:{\"id\":\"collapse1\",\"visible\":true}},[_c('b-row',{staticStyle:{\"margin-left\":\"20px\",\"margin-top\":\"20px\"}},[_c('b-col',{attrs:{\"md\":\"12\",\"id\":\"col-left\"}},[_c('b-form',{attrs:{\"data-vv-scope\":'FormScope_' + 1 + '_' + 1,\"data-vv-value-path\":'FormScope_' + 1 + '_' + 1}},[_vm._l((_vm.RowData),function(dataRow,idx){return _c('b-row',{key:idx},[_vm._l((_vm.response),function(data,index){return [(dataRow == data.RowNo)?[(data.isColumn == 'True')?[(data.ColumnType=='Tag')?[_c('div',{key:index,staticClass:\"div-collapse\"},[_c('span',{staticClass:\"master-span-form\"},[_vm._v(\"\\n                        \"+_vm._s(data.Label)+\"\\n                      \")])])]:_vm._e(),(data.ColumnType=='Label')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('span',[_c('b-row',[_c('b-col',{attrs:{\"md\":\"4\",\"offset\":\"4\"}},[_c('ABSLabelOnly',{attrs:{\"prop\":{cLabel: data.Label,\n                              cLabelSize: 4,\n                              cValue: '',\n                              cPageLevel: 1,\n                              cTabIndex: 1,\n                              cVisible: true,\n                              cClass: ''}}})],1)],1)],1)])]:_vm._e(),(data.ColumnType=='LookUp')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSInputSelectList',{attrs:{\"prop\":{\n                            dataLookUp: {\n                              LookUpCd: data.LookUpCd,\n                              ColumnDB: data.LookUpDB,\n                              InitialWhere: data.LookUpInitialWhere2,\n                              ParamWhere: '',\n                              OrderBy: data.LookUpSortField,\n                              SourceField: data.sourceField,\n                              DisplayLookUp: data.DisplayLookUp,\n                              ParamView: data.ParamViewLookUp2\n                            },\n                            cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                            cName: data.ParamName,\n                            cLabel: data.Label,\n                            cKey: false,\n                            cLabelSize: '4',\n                            cOrder: data.TabOrder,\n                            cTriggered: false,\n                            cDefault: '',\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                            cAsync: false,\n                            cFilter: false,\n                            cPageLevel: 1,\n                            cTabIndex: 1,\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\n                            cStatic: false,\n                            cOption: [],\n                            cDisplayColumn: data.DisplayColumn,\n                            cHideRowColumnCSS: false,\n                            cRowDisable: []\n                        },\"label\":_vm.models[data.ParamName+'Label']},on:{\"change\":function($event){_vm.OnLookUpChange(_vm.models[data.ParamName], index, data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='String')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputTextVuex',{ref:'ref_'+data.ParamName,refInFor:true,attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cType: 'text',\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cPageLevel: '1',\n                          cTabIndex: '1',\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cDecimal: '0',\n                          cLastLabel: '',\n                          cStyle: '',\n                          cIsAlwaysShow: false\n                        }},on:{\"input\":function($event){_vm.OnInputTextChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='Numeric')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputTextVuex',{ref:'ref_'+data.ParamName,refInFor:true,attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cType: 'numeric',\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cPageLevel: '1',\n                          cTabIndex: '1',\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cDecimal: '0',\n                          cLastLabel: '',\n                          cStyle: '',\n                          cIsAlwaysShow: false\n                        }},on:{\"input\":function($event){_vm.OnInputTextChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='Decimal')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputTextVuex',{ref:'ref_'+data.ParamName,refInFor:true,attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cType: 'decimal',\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cPageLevel: '1',\n                          cTabIndex: '1',\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cDecimal: '2',\n                          cLastLabel: '',\n                          cStyle: '',\n                          cIsAlwaysShow: false\n                        }},on:{\"input\":function($event){_vm.OnInputTextChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='DateRange')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputDateRangeVuex',{attrs:{\"prop\":{\n                          cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cFormat: 'dd/MM/yyyy',\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1\n                        },\"valueFrom\":_vm.models[data.ParamName.split(',')[0].trim()],\"valueTo\":_vm.models[data.ParamName.split(',')[1].trim()]},on:{\"from\":_vm.OnDateRangeFrom,\"to\":_vm.OnDateRangeTo,\"input\":_vm.OnDateRangeFromInput}})],1)]:_vm._e(),(data.ColumnType=='DateTime')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputDateVuex',{attrs:{\"prop\":{\n                          cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cLabelSize: 4,\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible:  true,\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cFormat: 'dd/MM/yyyy',\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1\n                        }},on:{\"input\":function($event){_vm.OnInputDateChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='Dropdown')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSInputSelect2',{attrs:{\"prop\":{\n                          dataLookUp: null,\n                          cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cName: data.ParamName,\n                          cLabel: data.Label,\n                          cKey: false,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cTriggered: false,\n                          cDefault: '',\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\n                          cAsync: false,\n                          cFilter: false,\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cStatic: true,\n                          cOption: _vm.toArray(data.setValue),\n                          cDisplayColumn: '',\n                          cHideRowColumnCSS: false,\n                          cRowDisable: []\n                        },\"label\":_vm.models[data.ParamName+'Label']},on:{\"change\":function($event){_vm.OnLookUpChange(_vm.models[data.ParamName], index, data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='RadioButtonList')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputRadioButtonVuex',{attrs:{\"prop\":{\n                          cId: data.ParamName + index + data.RowNo + data.position,\n                          cName: data.ParamName,\n                          cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cRadioOptions: _vm.toArray(data.setValue),\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible: true,\n                          cRadioDefaultOption: '',\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\n                          cShowClearButton: false\n                        }},on:{\"input\":function($event){_vm.OnInputRadioChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e(),(data.ColumnType=='CheckBox')?[_c('b-col',{key:index,attrs:{\"md\":\"6\",\"offset\":index > 1 ? ((_vm.response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''}},[_c('ABSinputCheckBox',{attrs:{\"prop\":{\n                          cName: data.ParamName,\n                          cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\n                          cOptions: _vm.toArray(data.setValue),\n                          cLabel: data.Label,\n                          cLabelSize: '4',\n                          cOrder: data.TabOrder,\n                          cKey: false,\n                          cVisible: true,\n                          cDefault: [],\n                          cPageLevel: 1,\n                          cTabIndex: 1,\n                          cParentForm: 'FormScope_' + 1 + '_' + 1,\n                          cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false)\n                        }},on:{\"input\":function($event){_vm.OnCheckBoxChange(_vm.models[data.ParamName], data.ParamName)}},model:{value:(_vm.models[data.ParamName]),callback:function ($$v) {_vm.$set(_vm.models, data.ParamName, $$v)},expression:\"models[data.ParamName]\"}})],1)]:_vm._e()]:_vm._e()]:_vm._e()]})],2)}),_c('b-row',[_c('b-col',{staticStyle:{\"text-align\":\"center\",\"padding-top\":\"10px\",\"padding-bottom\":\"10px\"},attrs:{\"md\":\"12\"}},[_c('ABSButton',{attrs:{\"text\":\"Generate Report\",\"icon\":\"list\",\"classButton\":\"button button--refresh\",\"classIcon\":\"icon-style-1\",\"styleButton\":\"width: 200px !important;\"},on:{\"click\":_vm.M_GenerateReport}})],1)],1)],2)],1)],1)],1),_c('div',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.collapse1\",modifiers:{\"collapse1\":true}}],staticClass:\"div-collapse\"},[_c('span',{staticClass:\"master-span\"},[_c('font-awesome-icon',{staticClass:\"icon-style-1__master\",attrs:{\"icon\":\"sort-down\"}})],1)]),_c('ABSPreviewReport',{attrs:{\"cVisible\":_vm.reportVisible,\"cSrc\":_vm.dataUrl}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"height--full\">\r\n    <div class=\"header--content\">\r\n      <div class=\"header--content__breadcrumbs\">\r\n        {{TitleHeader}}\r\n      </div>\r\n    </div>\r\n      <div class=\"content-app-form__body\" style=\"background-color: white;padding-top: 1px !important;margin-left: 15px;margin-right: 15px;height: 95%;overflow-y: auto;overflow-x: hidden;padding-bottom: 1%;\">\r\n        <b-collapse id=\"collapse1\" :visible=\"true\">\r\n        <b-row style=\"margin-left:20px;margin-top: 20px;\">\t\t\t\t\t\r\n          <b-col md=\"12\" id=\"col-left\">\r\n            <b-form :data-vv-scope=\"'FormScope_' + 1 + '_' + 1\" :data-vv-value-path=\"'FormScope_' + 1 + '_' + 1\">\r\n            <b-row v-for=\"(dataRow, idx) in RowData\" :key=\"idx\">\r\n              <template v-for=\"(data, index) in response\">\r\n                <template v-if=\"dataRow == data.RowNo\">\r\n                  <template v-if=\"data.isColumn == 'True'\">\r\n                    <template v-if=\"data.ColumnType=='Tag'\">\r\n                      <div class=\"div-collapse\" :key=\"index\">\r\n                        <span class=\"master-span-form\">\r\n                          {{data.Label}}\r\n                        </span>\r\n                      </div>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Label'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <span>\r\n                          <b-row>\r\n                            <b-col md=\"4\" offset=\"4\">\r\n                              <ABSLabelOnly :prop=\"{cLabel: data.Label,\r\n                                cLabelSize: 4,\r\n                                cValue: '',\r\n                                cPageLevel: 1,\r\n                                cTabIndex: 1,\r\n                                cVisible: true,\r\n                                cClass: ''}\"\r\n                              />\r\n                            </b-col>\r\n                          </b-row>\r\n                        </span>\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='LookUp'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSInputSelectList @change=\"OnLookUpChange(models[data.ParamName], index, data.ParamName)\"\r\n                          :prop=\"{\r\n                              dataLookUp: {\r\n                                LookUpCd: data.LookUpCd,\r\n                                ColumnDB: data.LookUpDB,\r\n                                InitialWhere: data.LookUpInitialWhere2,\r\n                                ParamWhere: '',\r\n                                OrderBy: data.LookUpSortField,\r\n                                SourceField: data.sourceField,\r\n                                DisplayLookUp: data.DisplayLookUp,\r\n                                ParamView: data.ParamViewLookUp2\r\n                              },\r\n                              cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                              cName: data.ParamName,\r\n                              cLabel: data.Label,\r\n                              cKey: false,\r\n                              cLabelSize: '4',\r\n                              cOrder: data.TabOrder,\r\n                              cTriggered: false,\r\n                              cDefault: '',\r\n                              cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                              cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                              cAsync: false,\r\n                              cFilter: false,\r\n                              cPageLevel: 1,\r\n                              cTabIndex: 1,\r\n                              cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                              cStatic: false,\r\n                              cOption: [],\r\n                              cDisplayColumn: data.DisplayColumn,\r\n                              cHideRowColumnCSS: false,\r\n                              cRowDisable: []\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :label=\"models[data.ParamName+'Label']\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='String'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputTextVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cType: 'text',\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cPageLevel: '1',\r\n                            cTabIndex: '1',\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cDecimal: '0',\r\n                            cLastLabel: '',\r\n                            cStyle: '',\r\n                            cIsAlwaysShow: false\r\n                          }\"\r\n                          @input=\"OnInputTextChange(models[data.ParamName], data.ParamName)\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :ref=\"'ref_'+data.ParamName\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Numeric'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputTextVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cType: 'numeric',\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cPageLevel: '1',\r\n                            cTabIndex: '1',\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cDecimal: '0',\r\n                            cLastLabel: '',\r\n                            cStyle: '',\r\n                            cIsAlwaysShow: false\r\n                          }\"\r\n                          @input=\"OnInputTextChange(models[data.ParamName], data.ParamName)\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :ref=\"'ref_'+data.ParamName\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Decimal'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputTextVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cType: 'decimal',\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cPageLevel: '1',\r\n                            cTabIndex: '1',\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cDecimal: '2',\r\n                            cLastLabel: '',\r\n                            cStyle: '',\r\n                            cIsAlwaysShow: false\r\n                          }\"\r\n                          @input=\"OnInputTextChange(models[data.ParamName], data.ParamName)\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :ref=\"'ref_'+data.ParamName\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='DateRange'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputDateRangeVuex\r\n                          :prop=\"{\r\n                            cValidate: (data.MaxLength && data.MaxLength != '' && data.MaxLength != 0 ? 'max:' + data.MaxLength : '') + (data.isRequired && data.isRequired == 'True' ? '|required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cFormat: 'dd/MM/yyyy',\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1\r\n                          }\"\r\n                          :valueFrom=\"models[data.ParamName.split(',')[0].trim()]\"\r\n                          :valueTo=\"models[data.ParamName.split(',')[1].trim()]\"\r\n                          @from=\"OnDateRangeFrom\"\r\n                          @to=\"OnDateRangeTo\"\r\n                          @input=\"OnDateRangeFromInput\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='DateTime'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputDateVuex\r\n                          @input=\"OnInputDateChange(models[data.ParamName], data.ParamName)\"\r\n                          :prop=\"{\r\n                            cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cLabelSize: 4,\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible:  true,\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cFormat: 'dd/MM/yyyy',\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='Dropdown'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSInputSelect2 @change=\"OnLookUpChange(models[data.ParamName], index, data.ParamName)\"\r\n                          :prop=\"{\r\n                            dataLookUp: null,\r\n                            cValidate : (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cName: data.ParamName,\r\n                            cLabel: data.Label,\r\n                            cKey: false,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cTriggered: false,\r\n                            cDefault: '',\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cVisible: (data.isVisible && data.isVisible == 'True' ? true : false),\r\n                            cAsync: false,\r\n                            cFilter: false,\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cStatic: true,\r\n                            cOption: toArray(data.setValue),\r\n                            cDisplayColumn: '',\r\n                            cHideRowColumnCSS: false,\r\n                            cRowDisable: []\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                          :label=\"models[data.ParamName+'Label']\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='RadioButtonList'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputRadioButtonVuex\r\n                          @input=\"OnInputRadioChange(models[data.ParamName], data.ParamName)\"\r\n                          :prop=\"{\r\n                            cId: data.ParamName + index + data.RowNo + data.position,\r\n                            cName: data.ParamName,\r\n                            cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cRadioOptions: toArray(data.setValue),\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible: true,\r\n                            cRadioDefaultOption: '',\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false),\r\n                            cShowClearButton: false\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                    <template v-if=\"data.ColumnType=='CheckBox'\">\r\n                      <b-col md=\"6\" :key=\"index\" :offset=\"index > 1 ? ((response[index-1].RowNo != data.RowNo && parseInt(data.position) % 2 == 0) ? '6' : '') : ''\">\r\n                        <ABSinputCheckBox\r\n                          @input=\"OnCheckBoxChange(models[data.ParamName], data.ParamName)\"\r\n                          :prop=\"{\r\n                            cName: data.ParamName,\r\n                            cValidate: (data.isRequired && data.isRequired == 'True' ? 'required' : ''),\r\n                            cOptions: toArray(data.setValue),\r\n                            cLabel: data.Label,\r\n                            cLabelSize: '4',\r\n                            cOrder: data.TabOrder,\r\n                            cKey: false,\r\n                            cVisible: true,\r\n                            cDefault: [],\r\n                            cPageLevel: 1,\r\n                            cTabIndex: 1,\r\n                            cParentForm: 'FormScope_' + 1 + '_' + 1,\r\n                            cProtect: (data.isDisabled && data.isDisabled == 'True' ? true : false)\r\n                          }\"\r\n                          v-model=\"models[data.ParamName]\"\r\n                        />\r\n                      </b-col>\r\n                    </template>\r\n                  </template>\r\n                </template>\r\n              </template>\r\n            </b-row>\r\n            \r\n            <b-row>\r\n              <b-col md=\"12\" style=\"text-align:center;padding-top:10px;padding-bottom:10px\">\r\n                <ABSButton\r\n                  text=\"Generate Report\"\r\n                  icon=\"list\"\r\n                  classButton=\"button button--refresh\"\r\n                  classIcon=\"icon-style-1\"\r\n                  @click=\"M_GenerateReport\"\r\n                  styleButton=\"width: 200px !important;\"\r\n                />\r\n              </b-col>\r\n            </b-row>\r\n          </b-form>\r\n          </b-col>\r\n        </b-row>\r\n        </b-collapse>\r\n        <div class=\"div-collapse\" v-b-toggle.collapse1>\r\n          <span class=\"master-span\">\r\n            <!-- nput By : {{IEBy.Input}} | Edit By : {{IEBy.Edit}}--> <font-awesome-icon icon=\"sort-down\" class=\"icon-style-1__master\" />  \r\n          </span>\r\n        </div>\r\n        <!-- <b-collapse id=\"collapse1\" :visible=\"true\"> -->\r\n          <ABSPreviewReport :cVisible=\"reportVisible\" :cSrc=\"dataUrl\" />\r\n        <!-- </b-collapse> -->\r\n        <!-- <b-row>\r\n          <b-col md=\"12\" style=\"margin-left: 15px;\"> -->\r\n            <!-- <ABSPreviewReport :cVisible=\"reportVisible\" :cSrc=\"dataUrl\" /> -->\r\n          <!-- </b-col>\r\n        </b-row> -->\r\n    </div>\r\n    <!-- <ABSPreviewReport :cVisible=\"reportVisible\" :cSrc=\"dataUrl\" /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataUrl:'',//'https://www.google.com&rs:Command=Render&rs:ClearSession=true&rc:Toolbar=false',\r\n      // xx: 'http://192.168.6.98/ReportPams/ReportsTemplate?oid=cfcd208495d565ef66e7dff9f98764da&ParamWhere=PortfolioName:PT. Absolute Connection^SubPortfolioName:PT. Absolute Connection^SubportfolioAddress:^SubportfolioCd:001',\r\n      // field: null,\r\n      // fieldArray: [],\r\n      // html: [],\r\n      PageLevel: '',\r\n      TabIndex: '',\r\n      reportParam: null,\r\n      reportVisible: true,\r\n      TitleHeader:'',\r\n\r\n      response: [],\r\n      models: {},\r\n      onChangeModels: {},\r\n      RowData: []\r\n    }\r\n  },\r\n  watch: {\r\n    models: function(newData, oldData) {\r\n      this.$emit('input', this.models)\r\n    },\r\n    '$route.query.oid'() {\r\n        this.fnLoadData()\r\n    }\r\n  },\r\n  methods: {\r\n    OnInputTextChange(data, paramName){},\r\n    OnInputDateChange(data, paramName){},\r\n    OnInputRadioChange(data, paramName){},\r\n    OnCheckBoxChange(data, paramName){},\r\n    OnLookUpChange(data, index, paramName){\r\n      // console.log('ahoy')\r\n      // this.$nextTick(() => {\r\n        // console.log(data)\r\n        // console.log(index)\r\n        // console.log(paramName)\r\n        this.models[paramName] = data.id\r\n        this.models[paramName+'Label'] = data.label\r\n        this.onChangeModels[paramName] = data\r\n        var end = false\r\n        var paramNameToSet = ''\r\n        var hasChange = []\r\n\r\n\r\n        if (this.response[index].OnChangeTriggerField && this.response[index].OnChangeTriggerField != '') {\r\n          var onChangeField = this.response[index].OnChangeTriggerField.split(',')\r\n          // hasChange = onChangeField\r\n          if (onChangeField.length > 0) {\r\n            for (let x = 0 ; x < onChangeField.length ; x ++) {\r\n              paramNameToSet = onChangeField[x]\r\n              var indexField = this.response.map(zz => zz.ParamName).indexOf(onChangeField[x])\r\n              var idxMany = 0\r\n\r\n              if (indexField == -1) {\r\n                // console.log('yes2')\r\n                for(let idSpliter = 0; idSpliter < this.response.length; idSpliter++) {\r\n                  // if (this.response[idSpliter].ParamName.includes(onChangeField[x])) {\r\n                    // console.log('yes2')\r\n                    if (this.response[idSpliter].ColumnType == 'DateRange') {\r\n                      // console.log('yes3S')\r\n                      if (this.response[idSpliter].ParamName.split(',').includes(onChangeField[x])) {\r\n                        // console.log('yes3S-2', idSpliter)\r\n                        if (this.response[idSpliter].SetColumnValue && this.response[idSpliter].SetColumnValue != '') {\r\n                          // console.log(onChangeField[x], this.response[idSpliter].SetColumnValue)\r\n                          // console.log(data)\r\n                          this.models[onChangeField[x]] = this.momentDateFormat(data[this.response[idSpliter].SetColumnValue], 'DD/MM/YYYY')\r\n                          // this.$forceUpdate()\r\n                        }\r\n                        end = true\r\n                        break\r\n                      }\r\n                      else {\r\n                        var paramDR = this.response[idSpliter].ParamName.split(',')\r\n                        // console.log('yes3S-2X', paramDR)\r\n                        // console.log(idSpliter)\r\n                        for (let DR = 0; DR < paramDR.length; DR++) {\r\n                          // console.log(onChangeField[x])\r\n                          // console.log('yesxxxx', paramDR[DR])\r\n                          if (onChangeField[x].includes(paramDR[DR])) {\r\n                            if (this.response[idSpliter].SetColumnValue && this.response[idSpliter].SetColumnValue != '') {\r\n                              var colVal = this.response[idSpliter].SetColumnValue.split('|')[DR]\r\n                              // console.log(colVal)\r\n                              if (colVal != '') {\r\n                                var idAct = onChangeField[x].split(paramDR[DR])[1]\r\n                                var dataAct = colVal.split(',')[idAct-1]\r\n                                // console.log('yes5', idAct)\r\n                                if (dataAct != '') {\r\n                                  this.models[paramDR[DR]] = this.momentDateFormat(data[dataAct], 'DD/MM/YYYY')\r\n                                  // this.$forceUpdate()\r\n                                }\r\n                              }\r\n                            }\r\n                            end = true\r\n                            break\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                      if (onChangeField[x].includes(this.response[idSpliter].ParamName)) {\r\n                        // console.log('yes3X')\r\n                        indexField = idSpliter\r\n                        idxMany = onChangeField[x].split(this.response[idSpliter].ParamName)[1]\r\n                        paramNameToSet = this.response[idSpliter].ParamName\r\n                        hasChange.push({'ParamName': paramName, 'ColumnChange': paramNameToSet})\r\n                        break\r\n                      }\r\n                    }\r\n                  // }\r\n                }\r\n\r\n                // console.log(end)\r\n                // console.log(indexField)\r\n                // console.log(idxMany)\r\n                // console.log(paramNameToSet)\r\n\r\n                // if (end) return\r\n                // if (indexField == -1) return\r\n                if (!end && indexField > -1) {\r\n                  if (this.response[indexField].SetColumnValue && this.response[indexField].SetColumnValue != '') {\r\n                    var colVal = this.response[indexField].SetColumnValue.split('|')[idxMany-1]\r\n                    // console.log('yes4',colVal)\r\n                    //Trigger Value To LookUp\r\n                    if (this.response[indexField].ColumnType == 'LookUp') {\r\n                      var ColValue = colVal.split(',')\r\n                      // console.log('yes5',ColValue)\r\n                      if (ColValue.length > 0) {\r\n                        for ( let cv = 0 ; cv < ColValue.length ; cv ++) {\r\n                          var lu = ColValue[cv].split('=')\r\n                          if (lu[0] == 'id') {\r\n                            this.models[paramNameToSet] = data[lu[1]]\r\n                          }\r\n                          else if (lu[0] == 'label') {\r\n                            this.models[paramNameToSet+'Label'] = data[lu[1]]\r\n                          }\r\n                          // this.$forceUpdate()\r\n                        }\r\n                      }\r\n                    }\r\n                    //End Trigger Value To LookUp\r\n\r\n                    //Trigger Value To Text, Date, Radio\r\n                    else {\r\n                      this.models[onChangeField[x]] = data[this.response[indexField].SetColumnValue]\r\n                      // this.$forceUpdate()\r\n                    }\r\n                    //End Trigger Value To Text, Date, Radio\r\n                  }\r\n                }\r\n              }\r\n              else {\r\n                hasChange.push({'ParamName': paramName, 'ColumnChange': onChangeField[x]})\r\n                if (this.response[indexField].SetColumnValue && this.response[indexField].SetColumnValue != '') {\r\n\r\n                  //Trigger Value To LookUp\r\n                  if (this.response[indexField].ColumnType == 'LookUp') {\r\n                    var ColValue = this.response[indexField].SetColumnValue.split(',')\r\n                    if (ColValue.length > 0) {\r\n                      for ( let cv = 0 ; cv < ColValue.length ; cv ++) {\r\n                        var lu = ColValue[cv].split('=')\r\n                        if (lu[0] == 'id') {\r\n                          this.models[onChangeField[x]] = data[lu[1]]\r\n                        }\r\n                        else if (lu[0] == 'label') {\r\n                          this.models[onChangeField[x]+'Label'] = data[lu[1]]\r\n                        }\r\n                        // this.$forceUpdate()\r\n                      }\r\n                    }\r\n                  }\r\n                  //End Trigger Value To LookUp\r\n\r\n                  //Trigger Value To Text, Date, Radio\r\n                  else {\r\n                    this.models[onChangeField[x]] = data[this.response[indexField].SetColumnValue]\r\n                    // this.$forceUpdate()\r\n                  }\r\n                  //End Trigger Value To Text, Date, Radio\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.response[index].OnChangeTriggerInitialWhere && this.response[index].OnChangeTriggerInitialWhere != '') {\r\n          // console.log('yes1')\r\n          //OnChange To Trigger Any Where Parameter\r\n\r\n          var onChangeWhere = this.response[index].OnChangeTriggerInitialWhere.split(',')\r\n          if (onChangeWhere.length > 0) {\r\n            // console.log('yes2',onChangeWhere)\r\n            for (let x = 0 ; x < onChangeWhere.length ; x ++) {\r\n              var indexFieldWhere = this.response.map(zz => zz.ParamName).indexOf(onChangeWhere[x])\r\n\r\n              if (this.response[indexFieldWhere].SetColumnWhere && this.response[indexFieldWhere].SetColumnWhere != '') {\r\n                // console.log('yes3',indexFieldWhere)\r\n                //Trigger Where To LookUp\r\n                if (this.response[indexFieldWhere].ColumnType == 'LookUp') {\r\n                  var newWhere = this.response[indexFieldWhere].LookUpInitialWhere\r\n                  var splitInitialWhere = this.response[indexFieldWhere].LookUpInitialWhere.trim().split(' ')\r\n                  var setWhere = this.response[indexFieldWhere].SetColumnWhere.trim().split(' ')\r\n                  for (let sw = 0; sw < setWhere.length; sw++) {\r\n                    // console.log(setWhere[sw])\r\n                    var cols = setWhere[sw].split('=')[0].trim()\r\n                    //check initialwhere\r\n                    for (let iw = 0; iw < splitInitialWhere.length; iw++) {\r\n                      if (splitInitialWhere[iw+1]){\r\n                        if (splitInitialWhere[iw+1].toUpperCase().includes('AND')) {\r\n                          if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                            newWhere = newWhere.replace(splitInitialWhere[iw] + ' AND', '')\r\n                          }\r\n                        }\r\n                        else {\r\n                          if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                            newWhere = newWhere.replace(splitInitialWhere[iw], '')\r\n                          }\r\n                        }\r\n                      }\r\n                      else {\r\n                        if (splitInitialWhere[iw-1]){\r\n                          if (splitInitialWhere[iw-1].toUpperCase().includes('AND')) {\r\n                            if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                              newWhere = newWhere.replace('AND ' + splitInitialWhere[iw], '')\r\n                            }\r\n                          }\r\n                          else {\r\n                            if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                              newWhere = newWhere.replace(splitInitialWhere[iw], '')\r\n                            }\r\n                          }\r\n                        }\r\n                        else {\r\n                          if (splitInitialWhere[iw].split('=')[0].trim() == cols.toUpperCase()) {\r\n                            newWhere = newWhere.replace(splitInitialWhere[iw], '')\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    newWhere = newWhere && newWhere != '' ? newWhere.trim() + ' AND ' : newWhere.trim()\r\n\r\n                    if (setWhere[sw].includes('^')) {\r\n                      // var forReplace = setWhere[sw].match(/(?=\\^)(.*)(?=\\^)/g)[0]\r\n                      var forReplace = setWhere[sw].match(new RegExp(/\\^(.*)\\^/))[1]\r\n                      if (forReplace && forReplace != ''){\r\n                        // forReplace = forReplace.substring(1, (forReplace.length - 1))\r\n                        // console.log(forReplace)\r\n                        if (forReplace.includes('.')) {\r\n                          //Set Where With OnChange Data\r\n                          // if (paramName == forReplace.split('.')[0]) {\r\n                            var isWhere = this.onChangeModels[forReplace.split('.')[0]][forReplace.split('.')[1]]\r\n                            // console.log(isWhere)\r\n                            if (isWhere && isWhere != '') {\r\n                              newWhere += cols + \"='\" + this.onChangeModels[forReplace.split('.')[0]][forReplace.split('.')[1]] + \"' AND \"\r\n                            }\r\n                            else {\r\n                              var idChange = hasChange.map(x => x.ColumnChange).indexOf(forReplace.split('.')[0])\r\n                              // console.log(idChange)\r\n                              if (idChange > -1) {\r\n                                newWhere += cols + \"='\" + this.onChangeModels[hasChange[idChange].ParamName][forReplace.split('.')[1]] + \"' AND \"\r\n                              }\r\n                            }\r\n                          // }\r\n                        }\r\n                        else {\r\n                          // Set Where With Model Data\r\n                          // console.log('data',data)\r\n                          newWhere += cols + \"='\" + data[forReplace] + \"' AND \"\r\n                        }\r\n                      }\r\n                    }\r\n                    else {\r\n                      newWhere += ' ' + setWhere[sw] + \" AND \"\r\n                    }\r\n\r\n                    // console.log(newWhere)\r\n\r\n                    if (sw == (setWhere.length - 1)) {\r\n                      newWhere = newWhere.substring(0, (newWhere.length - 4))\r\n                      // console.log('final',newWhere)\r\n                      this.response[indexFieldWhere].LookUpInitialWhere2 = newWhere\r\n                    }\r\n                  }\r\n\r\n                  // this.response[indexFieldWhere].LookUpInitialWhere2 = this.response[indexFieldWhere].LookUpInitialWhere + \" \" + newWhere\r\n                }\r\n                //End Trigger Where To LookUp\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        this.M_CheckParamView()\r\n\r\n      this.$forceUpdate()\r\n    },\r\n    OnDateRangeFrom(data, paramName){\r\n      // console.log(data)\r\n      // console.log(paramName)\r\n      // this.$nextTick(() => {\r\n      this.models[paramName.split(',')[0].trim()] = data\r\n      this.models[paramName.split(',')[1].trim()] = data\r\n\r\n      for(let x = 0 ; x < this.response.length ; x ++) {\r\n        if (this.response[x].ColumnType == 'DateRange' && this.response[x].ParamName.includes(paramName)) {\r\n          var index = x\r\n          if (this.response[index].OnChangeTriggerField && this.response[index].OnChangeTriggerField != '') {\r\n            var onChangeField = this.response[index].OnChangeTriggerField.split(',')\r\n\r\n            if (onChangeField.length > 0) {\r\n              for (let x = 0 ; x < onChangeField.length ; x ++) {\r\n                this.models[onChangeField[x]] = this.momentDateFormatting(data, 'DD/MM/YYYY')\r\n              }\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n      // })\r\n\r\n      this.$forceUpdate()\r\n    },\r\n    OnDateRangeFromInput(data, slot) {\r\n      // console.log(slot,data)\r\n    },\r\n    OnDateRangeTo(data, paramName){\r\n      // console.log(data)\r\n      // console.log(paramName)\r\n      // this.$nextTick(() => {\r\n      this.models[paramName.split(',')[1].trim()] = data\r\n\r\n      for(let x = 0 ; x < this.response.length ; x ++) {\r\n        if (this.response[x].ColumnType == 'DateRange' && this.response[x].ParamName.includes(paramName)) {\r\n          var index = x\r\n          if (this.response[index].OnChangeTriggerField && this.response[index].OnChangeTriggerField != '') {\r\n            var onChangeField = this.response[index].OnChangeTriggerField.split(',')\r\n\r\n            if (onChangeField.length > 0) {\r\n              for (let x = 0 ; x < onChangeField.length ; x ++) {\r\n                this.models[onChangeField[x]] = this.momentDateFormatting(data, 'DD/MM/YYYY')\r\n              }\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n      // })\r\n\r\n      this.$forceUpdate()\r\n    },\r\n    M_ClearForm () {\r\n    },\r\n    M_GenerateReport () {\r\n      console.log(this.models)\r\n      var scopeForm = \"FormScope_\" + 1 + \"_\" + 1\r\n\r\n      this.$validator._base.validateAll(scopeForm).then((result) => {\r\n        if (!result) return\r\n        \r\n        var params = \"\"\r\n        var reportPath = \"/\" + this.response[0].PathReport + \"/\" + this.response[0].ReportName\r\n        \r\n        var paramToGetPath = {\r\n          OptionSeq : this.getOptionSeq().OptionSeq\r\n        }\r\n\r\n        this.postEncode(this.getUrlConditionForReportPath(), paramToGetPath)\r\n        .then((ress) => {\r\n          var data;\r\n          if (ress) {\r\n            if (ress.Data.length > 0) {\r\n              var cond = ress.Data\r\n              cond.forEach((data, index) => {\r\n                var state1 = true;\r\n                var state2 = true;\r\n                var state3 = true;\r\n\r\n                if(data.OptionFunctionCd && data.OptionFunctionCd != ''){\r\n                  var strParam = data.ParameterFunction && data.ParameterFunction != '' ? data.ParameterFunction.split(',') : []\r\n                  var param = {}\r\n                  if (strParam.length > 0) {\r\n                    strParam.forEach((parm, i) => {\r\n                      var p = parm.split('=')\r\n                      param[p[0].trim()] = this.GetParameter(p[1].trim())\r\n                    })\r\n\r\n                    this.FnDynamicFunction(param)\r\n                    .then(ress => {\r\n                      if (ress) {\r\n                        if (ress.length > 0) {\r\n                          var dynamicData = ress[0]\r\n                          if (\r\n                            (dynamicData[data.ParamA] && dynamicData[data.ParamA] != '') &&\r\n                            (dynamicData[data.ValueA] && dynamicData[data.ValueA] != '')\r\n                          ){\r\n                            state1 = false\r\n                            if (this.models[dynamicData[data.ParamA]] == dynamicData[data.ValueA]) {\r\n                              state1 = true\r\n                            }\r\n                          }\r\n\r\n                          if (\r\n                            (dynamicData[data.ParamB] && dynamicData[data.ParamB] != '') &&\r\n                            (dynamicData[data.ValueB] && dynamicData[data.ValueB] != '')\r\n                          ){\r\n                            state2 = false\r\n                            if (this.models[dynamicData[data.ParamB]] == dynamicData[data.ValueB]) {\r\n                              state2 = true\r\n                            }\r\n                          }\r\n\r\n                          if (\r\n                            (dynamicData[data.ParamC] && dynamicData[data.ParamC] != '') &&\r\n                            (dynamicData[data.ValueC] && dynamicData[data.ValueC] != '')\r\n                          ){\r\n                            state3 = false\r\n                            if (this.models[dynamicData[data.ParamC]] == dynamicData[data.ValueC]) {\r\n                              state3 = true\r\n                            }\r\n                          }\r\n\r\n                          if (state1 && state2 && state3) {\r\n                            reportPath = data.ReportPath\r\n                          }\r\n                        }\r\n                      }\r\n                    })\r\n                  }\r\n                }\r\n                else {\r\n                  if (\r\n                    (data.ParamA && data.ParamA != '') &&\r\n                    (data.ValueA && data.ValueA != '')\r\n                  ){\r\n                    state1 = false\r\n                    if (this.models[data.ParamA] == data.ValueA) {\r\n                      state1 = true\r\n                    }\r\n                  }\r\n\r\n                  if (\r\n                    (data.ParamB && data.ParamB != '') &&\r\n                    (data.ValueB && data.ValueB != '')\r\n                  ){\r\n                    state2 = false\r\n                    if (this.models[data.ParamB] == data.ValueB) {\r\n                      state2 = true\r\n                    }\r\n                  }\r\n\r\n                  if (\r\n                    (data.ParamC && data.ParamC != '') &&\r\n                    (data.ValueC && data.ValueC != '')\r\n                  ){\r\n                    state3 = false\r\n                    if (this.models[data.ParamC] == data.ValueC) {\r\n                      state3 = true\r\n                    }\r\n                  }\r\n\r\n                  if (state1 && state2 && state3) {\r\n                    reportPath = data.ReportPath\r\n                  }\r\n                }\r\n              })\r\n\r\n              // data = ress.Data[0]\r\n              // if (!data.ScriptCondition || data.ScriptCondition == '') {}\r\n              // else {\r\n                // var str = data.ScriptCondition\r\n                \r\n                // if (this.response[0].CntReportPath > 1) {\r\n                //   var arrCondition = str.split('^')\r\n                //   var col = ''\r\n                //   var val = ''\r\n\r\n                //   arrCondition.forEach((data, index) => {\r\n                //     if (data.includes('else if') || data.includes('if')) {\r\n                //       var dt = data.substring(data.indexOf('(')+1, data.indexOf(')'))\r\n                //       col = dt.split('==')[0].trim()\r\n                //       val = dt.split('==')[1].trim()\r\n                //     }\r\n                //     else {\r\n                //       var condition = data.split(';')\r\n                //       if (condition.length > 0) {\r\n                //         condition.forEach((dt, index) => {\r\n                //           //saat ini hanya untuk reportpath\r\n                //           var setCol = dt.split('=')[0].trim()\r\n                //           var setVal = dt.split('=')[1].trim()\r\n                //           if (this.models[col] == val) {\r\n                //             // console.log(setCol, setVal)\r\n                //             reportPath = setVal\r\n                //           }\r\n                //         })\r\n                //       }\r\n                //     }\r\n                //   })\r\n                // }\r\n              // }\r\n            }\r\n          }\r\n\r\n          // console.log(this.response)\r\n          // console.log(this.models)\r\n\r\n          // for (let idx = 0; idx < this.response.length; idx++) {\r\n          //   if (this.response[idx].isParam == 'True') {\r\n          //     if (this.response[idx].ColumnType == 'DateRange') {\r\n          //       var name = this.response[idx].ParamName.split(',')\r\n          //       params += name[0].trim() + \":\" + this.models[name[0].trim()] + \"^\"\r\n          //       params += name[1].trim() + \":\" + this.models[name[1].trim()]\r\n          //     }\r\n          //     else {\r\n          //       params += this.response[idx].ParamName + \":\" + this.models[this.response[idx].ParamName]\r\n          //     }\r\n\r\n          //     if (idx < (this.response.length - 1)) {\r\n          //       params += \"^\"\r\n          //     }\r\n          //   }\r\n          // }\r\n          for (let idx = 0; idx < this.response.length; idx++) {\r\n            var yesno = 0\r\n            var isDT = 0\r\n            if (this.response[idx].ColumnType.toUpperCase().includes('Date')) {\r\n              isDT = 1\r\n            }\r\n\r\n            if (this.response[idx].isParam == 'True') {\r\n              yesno = 1\r\n\r\n              if (this.response[idx].DefaultValue.toUpperCase().includes('ORDER BY')) {\r\n                var orderbyy = 'ORDER BY '\r\n                var exst = this.response[idx].DefaultValue\r\n                var varOrderBy = exst.match(new RegExp(/\\{(.*)\\}/))[0].split(',')\r\n                for (let vob = 0; vob < varOrderBy.length; vob++) {\r\n                  var varParam = varOrderBy[vob].match(new RegExp(/\\{(.*)\\}/))[1]\r\n\r\n                  if (!orderbyy.includes(this.models[varParam.trim()])) {\r\n                    orderbyy += this.models[varParam.trim()] + ','\r\n                  }\r\n\r\n                  if (vob == (varOrderBy.length-1)) {\r\n                    orderbyy = orderbyy.slice(0,-1)\r\n                  }\r\n                }\r\n                \r\n                // params += yesno + \"|\" + isDT + \"|\" + this.response[idx].ParamName + \":\" + orderbyy\r\n                this.models[this.response[idx].ParamName] = orderbyy\r\n              }\r\n              else {\r\n                if (this.response[idx].DefaultValue.includes('{') && this.response[idx].DefaultValue.includes('}')){\r\n                  var pN = this.response[idx].DefaultValue.match(new RegExp(/\\{(.*)\\}/))[1]\r\n                  var idxPN = this.response.map(x => x.ParamName).indexOf(pN)\r\n                  if (this.response[idxPN].ColumnType == \"CheckBox\") {\r\n                    var val = this.response[idx].DefaultValue.split('=')[1]\r\n                    this.models[this.response[idx].ParamName] = this.models[pN].includes(val) ? 'Y' : 'N'\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            // if (this.response[idx].isParam == 'True') {\r\n              if (this.response[idx].ColumnType == 'DateRange') {\r\n                var name = this.response[idx].ParamName.split(',')\r\n                params += yesno + \"|\" + isDT  + \"|\" +  name[0].trim() + \":\" + this.models[name[0].trim()] + \"^\"\r\n                params += yesno + \"|\" + isDT  + \"|\" + name[1].trim() + \":\" + this.models[name[1].trim()] \r\n              }\r\n              else {\r\n                params += yesno + \"|\" + isDT  + \"|\" + this.response[idx].ParamName + \":\" + this.models[this.response[idx].ParamName]\r\n              }\r\n\r\n              if (idx < (this.response.length - 1)) {\r\n                params += \"^\"\r\n              }\r\n            // }\r\n          }\r\n\r\n          var param = {\r\n            OptionSeq : this.getOptionSeq().OptionSeq,\r\n            ParamWhere: params,\r\n            ReportPath: reportPath\r\n          }\r\n\r\n          this.postEncode(this.getUrlSaveParamTemp(), param)\r\n          .then((response) => {\r\n            if(response == null) return\r\n            var data = response.Data[0].Id\r\n            this.dataUrl = this.GenerateReportTemplate(this.getOptionSeq().OptionSeq, data)\r\n            console.log(this.dataUrl)\r\n            this.reportVisible = true\r\n          })\r\n        })\r\n      })\r\n    },\r\n    loadData() {\r\n        // getUrlParameterHTML\r\n        var param = {\r\n          OptionSeq: this.getOptionSeq().OptionSeq,\r\n          SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n          UserId: this.getDataUser().UserId,\r\n          // ParamWhere: \"isParam=1\"\r\n        }\r\n\r\n        this.postEncode(this.getUrlParameterHTML(), param)\r\n        .then((response) => {\r\n            if(response == null) return\r\n            this.response = response.Data\r\n            for (let a = 0; a < this.response.length; a ++) {\r\n              if (a == 0) {\r\n                this.RowData.push(this.response[a].RowNo)\r\n              }\r\n              else {\r\n                if (this.RowData.indexOf(this.response[a].RowNo) < 0) {\r\n                  this.RowData.push(this.response[a].RowNo)\r\n                }\r\n              }\r\n              \r\n              var iWhere = this.ReplaceParameter(this.response[a].LookUpInitialWhere, true)\r\n              this.response[a].LookUpInitialWhere = iWhere\r\n              this.response[a].LookUpInitialWhere2 = iWhere\r\n\r\n              this.response[a].DefaultValue = this.response[a].DefaultValue && this.response[a].DefaultValue != '' ? this.response[a].DefaultValue : ''\r\n\r\n              if (this.response[a].ColumnType == 'LookUp') {\r\n                this.models[this.response[a].ParamName.trim()] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n                this.models[this.response[a].ParamName.trim()+'Label'] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n\r\n                this.onChangeModels[this.response[a].ParamName.trim()] = {}\r\n\r\n                if (this.response[a].ParamViewLookUp && this.response[a].ParamViewLookUp != '') {\r\n                  var pView = this.response[a].ParamViewLookUp.trim().split(',')\r\n                  var pView2 = \"\"\r\n                  for (let pv = 0; pv < pView.length; pv ++) {\r\n                    if (pView[pv].includes('^')) {\r\n                      pView2 += this.ReplaceParameter(pView[pv], true) + ','\r\n                    }\r\n                    else if (pView[pv].includes('{') && pView[pv].includes('}')) {\r\n                      var pN = pView[pv].trim().match(new RegExp(/\\{(.*)\\}/))[1]\r\n                      var idxPN = this.response.map(x => x.ParamName).indexOf(pN)\r\n                      if (this.models[pN] && this.models[pN] != '') {\r\n                        pView2 += \"'\" + this.models[pN] + \"',\"\r\n                      }\r\n                      else {\r\n                        if (this.response[idxPN].DefaultValue && this.response[idxPN].DefaultValue != '') {\r\n                          pView2 += \"'\" + this.ReplaceParameter(this.response[idxPN].DefaultValue, false) + \"',\"\r\n                        }\r\n                        else {\r\n                          pView2 += \"'',\"\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  this.response[a].ParamViewLookUp2 = pView2.slice(0,-1)\r\n                }\r\n              }\r\n              else if (this.response[a].ColumnType == 'DateRange') {\r\n                if (this.response[a].isColumn === 'True') {\r\n                  var par = this.response[a].ParamName.split(',')\r\n                  this.models[par[0].trim()] = ''\r\n                  this.models[par[1].trim()] = ''\r\n                }\r\n              }\r\n              else if (this.response[a].ColumnType == 'Dropdown') {\r\n                this.models[this.response[a].ParamName.trim()] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n              }\r\n              else if (this.response[a].ColumnType == 'CheckBox') {\r\n                this.models[this.response[a].ParamName.trim()] = []\r\n              }\r\n              else {\r\n                this.models[this.response[a].ParamName.trim()] = this.ReplaceParameter(this.response[a].DefaultValue, false)\r\n              }\r\n            }\r\n        })\r\n    },\r\n    toArray(string) {\r\n      var x = []\r\n      var arrString = string.split(',')\r\n      if (arrString.length > 0) {\r\n        var str = \"\"\r\n        for (let a = 0; a < arrString.length; a ++) {\r\n          if (arrString[a].includes('{')) {\r\n            str = arrString[a]\r\n          }\r\n          else if (arrString[a].includes('}')) {\r\n            str += ',' + arrString[a]\r\n            \r\n            x.push(JSON.parse(str))\r\n          }\r\n          else {\r\n            str += ',' + arrString[a]\r\n          }\r\n        }\r\n      }\r\n\r\n      return x\r\n    },\r\n    GetPageInfo(){\r\n      var param = {\r\n        Oid: this.getOptionSeq().OptionSeq,\r\n        UserId: this.getDataUser().UserId,\r\n        SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n      }\r\n\r\n      this.postEncode(this.getPageInfoByOption(), param).then(response => {\r\n        if (response == null) return\r\n\r\n          var data = response.Data[0]\r\n          this.TitleHeader = data.ModuleName + ' | ' + data.TextMenu\r\n      })\r\n    },\r\n    ReplaceParameter(string, isParam = false) {\r\n      if (string && string != '') {\r\n        if (isParam) {\r\n          string = string.replace(/\\^PortfolioCd\\^/g, \"'\" + this.getDataUser().PortfolioCd + \"'\")\r\n          string = string.replace(/\\^PortfolioName\\^/g, \"'\" + this.getDataUser().PortfolioName + \"'\")\r\n          string = string.replace(/\\^SubPortfolioCd\\^/g, \"'\" + this.getDataUser().SubPortfolioCd + \"'\")\r\n          // string = string.replace(/\\^SubPortfolioName\\^/g, \"'\" + this.getDataUser().SubPortfolioName + \"'\")\r\n          string = string.replace(/\\^Name\\^/g, \"'\" + this.getDataUser().SubPortfolioName + \"'\")\r\n          string = string.replace(/\\^UserId\\^/g, \"'\" + this.getDataUser().UserId + \"'\")\r\n          string = string.replace(/\\^Username\\^/g, \"'\" + this.getDataUser().Username + \"'\")\r\n          string = string.replace(/\\^Address1\\^/g, \"'\" + this.getDataUser().Address1 + \"'\")\r\n          string = string.replace(/\\^Address2\\^/g, \"'\" + this.getDataUser().Address2 + \"'\")\r\n          string = string.replace(/\\^Address3\\^/g, \"'\" + this.getDataUser().Address3 + \"'\")\r\n          string = string.replace(/\\^Address4\\^/g, \"'\" + this.getDataUser().Address4 + \"'\")\r\n          string = string.replace(/\\^ZipCode\\^/g, \"'\" + this.getDataUser().ZipCode + \"'\")\r\n          string = string.replace(/\\^PhoneNo\\^/g, \"'\" + this.getDataUser().PhoneNo + \"'\")\r\n          string = string.replace(/\\^FaxNo\\^/g, \"'\" + this.getDataUser().FaxNo + \"'\")\r\n          string = string.replace(/\\^Year\\^/g, \"'\" + parseInt(this.momentDateFormatting(new Date(), 'YYYY')).toString() + \"'\")\r\n          string = string.replace(/\\^Day\\^/g, \"'\" + parseInt(this.momentDateFormatting(new Date(), 'DD')).toString() + \"'\")\r\n          string = string.replace(/\\^Month\\^/g, \"'\" + parseInt(this.momentDateFormatting(new Date(), 'MM')).toString() + \"'\")\r\n          string = string.replace(/\\^Today\\^/g, \"'\" + this.momentDateFormatting(new Date(), 'YYYY-MM-DD') + \"'\")\r\n        }\r\n        else {\r\n          string = string.replace(/\\^PortfolioCd\\^/g, this.getDataUser().PortfolioCd)\r\n          string = string.replace(/\\^PortfolioName\\^/g, this.getDataUser().PortfolioName)\r\n          string = string.replace(/\\^SubPortfolioCd\\^/g, this.getDataUser().SubPortfolioCd)\r\n          // string = string.replace(/\\^SubPortfolioName\\^/g, this.getDataUser().SubPortfolioName)\r\n          string = string.replace(/\\^Name\\^/g, this.getDataUser().SubPortfolioName)\r\n          string = string.replace(/\\^UserId\\^/g, this.getDataUser().UserId)\r\n          string = string.replace(/\\^Username\\^/g, this.getDataUser().Username)\r\n          string = string.replace(/\\^Address1\\^/g, this.getDataUser().Address1)\r\n          string = string.replace(/\\^Address2\\^/g, this.getDataUser().Address2)\r\n          string = string.replace(/\\^Address3\\^/g, this.getDataUser().Address3)\r\n          string = string.replace(/\\^Address4\\^/g, this.getDataUser().Address4)\r\n          string = string.replace(/\\^ZipCode\\^/g, this.getDataUser().ZipCode)\r\n          string = string.replace(/\\^PhoneNo\\^/g, this.getDataUser().PhoneNo)\r\n          string = string.replace(/\\^FaxNo\\^/g, this.getDataUser().FaxNo)\r\n          string = string.replace(/\\^Year\\^/g, parseInt(this.momentDateFormatting(new Date(), 'YYYY')).toString())\r\n          string = string.replace(/\\^Day\\^/g, parseInt(this.momentDateFormatting(new Date(), 'DD')).toString())\r\n          string = string.replace(/\\^Month\\^/g, parseInt(this.momentDateFormatting(new Date(), 'MM')).toString())\r\n          string = string.replace(/\\^Today\\^/g, this.momentDateFormatting(new Date(), 'YYYY-MM-DD'))\r\n        }\r\n      }\r\n      else {\r\n        string = ''\r\n      }\r\n\r\n      return string\r\n    },\r\n    M_CheckParamView() {\r\n      for (let a = 0; a < this.response.length ; a++) {\r\n        if (this.response[a].ColumnType == 'LookUp') {\r\n          if (this.response[a].ParamViewLookUp && this.response[a].ParamViewLookUp != '') {\r\n            var pView = this.response[a].ParamViewLookUp.trim().split(',')\r\n            var pView2 = \"\"\r\n            for (let pv = 0; pv < pView.length; pv ++) {\r\n              if (pView[pv].includes('^')) {\r\n                pView2 += this.ReplaceParameter(pView[pv], true) + ','\r\n              }\r\n              else if (pView[pv].includes('{') && pView[pv].includes('}')) {\r\n                var pN = pView[pv].trim().match(new RegExp(/\\{(.*)\\}/))[1]\r\n                var idxPN = this.response.map(x => x.ParamName).indexOf(pN)\r\n                if (this.models[pN] && this.models[pN] != '') {\r\n                  pView2 += \"'\" + this.models[pN] + \"',\"\r\n                }\r\n                else {\r\n                  if (this.response[idxPN].DefaultValue && this.response[idxPN].DefaultValue != '') {\r\n                    pView2 += \"'\" + this.ReplaceParameter(this.response[idxPN].DefaultValue, false) + \"',\"\r\n                  }\r\n                  else {\r\n                    pView2 += \"'',\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.response[a].ParamViewLookUp2 = pView2.slice(0,-1)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    GetParameter(string) {\r\n      if (string.toUpperCase() == '^PORTFOLIOCD^') {\r\n        return this.getDataUser().PortfolioCd\r\n      }\r\n      else if (string.toUpperCase() == '^PORTFOLIONAME^') {\r\n        return this.getDataUser().PortfolioName\r\n      }\r\n      else if (string.toUpperCase() == '^SUBPORTFOLIOCD^') {\r\n        return this.getDataUser().SubPortfolioCd\r\n      }\r\n      else if (string.toUpperCase() == '^NAME^') {\r\n        return this.getDataUser().SubPortfolioName\r\n      }\r\n      else if (string.toUpperCase() == '^USERID^') {\r\n        return this.getDataUser().UserId\r\n      }\r\n      else if (string.toUpperCase() == '^USERNAME^') {\r\n        return this.getDataUser().Username\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS1^') {\r\n        return this.getDataUser().Address1\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS2^') {\r\n        return this.getDataUser().Address2\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS3^') {\r\n        return this.getDataUser().Address3\r\n      }\r\n      else if (string.toUpperCase() == '^ADDRESS4^') {\r\n        return this.getDataUser().Address4\r\n      }\r\n      else if (string.toUpperCase() == '^ZIPCODE^') {\r\n        return this.getDataUser().ZipCode\r\n      }\r\n      else if (string.toUpperCase() == '^PHONENO^') {\r\n        return this.getDataUser().PhoneNo\r\n      }\r\n      else if (string.toUpperCase() == '^FAXNO^') {\r\n        return this.getDataUser().FaxNo\r\n      }\r\n      else {\r\n        return string\r\n      }\r\n    },\r\n    fnLoadData(){\r\n      this.dataUrl = this.getUrlReportBlankPage()\r\n          // var obj = this.toArray('{ \"label\": \"Invoice No\", \"id\": \"A.DebitNo\" },{ \"label\": \"Application No\", \"id\": \"A.ApplicationNo\" }')\r\n          // console.log(obj)\r\n          this.loadData()\r\n          this.GetPageInfo()\r\n    }\r\n  },\r\n  beforeCreate: function () {\r\n    this.PageLevel = 1\r\n    this.TabIndex = 1\r\n  },\r\n  created: function() {\r\n    // console.log('aaa',this.getUrlReportBlankPage())\r\n   this.fnLoadData()\r\n  },\r\n  beforeMount: function() {\r\n  },\r\n  mounted: function() {\r\n    \r\n    this.hideSideBarMenu()\r\n    // this.doGetHtml()\r\n\r\n    this.$store.commit('setStatus', 'new')\r\n  },\r\n  beforeUpdate: function() {\r\n  },\r\n  updated: function() {\r\n  },\r\n  beforeDestroy: function() {\r\n  },\r\n  destroyed: function() {\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n  .button {\r\n    width: 200px !important;\r\n  }\r\n\r\n  #ReportViewer1 .ToolBarButtonsCell{\r\n    position: fixed !important;\r\n    width: 100% !important;\r\n  }\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReportPage2_bk.vue?vue&type=template&id=6e3f1b54&scoped=true&\"\nimport script from \"./ReportPage2_bk.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportPage2_bk.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ReportPage2_bk.vue?vue&type=style&index=0&id=6e3f1b54&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e3f1b54\",\n  null\n  \n)\n\ncomponent.options.__file = \"ReportPage2_bk.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=style&index=0&id=6e3f1b54&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPage2_bk.vue?vue&type=style&index=0&id=6e3f1b54&scoped=true&lang=css&\""],"sourceRoot":""}