{"version":3,"sources":["webpack:///./src/views/AP/AP_PaymentAdvice/PageLevel_2/AP_PaymentAdviceD.vue?e129","webpack:///src/views/AP/AP_PaymentAdvice/PageLevel_2/AP_PaymentAdviceD.vue","webpack:///./src/views/AP/AP_PaymentAdvice/PageLevel_2/AP_PaymentAdviceD.vue?ee00","webpack:///./src/views/AP/AP_PaymentAdvice/PageLevel_2/AP_PaymentAdviceD.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","style","attrs","mousetip","mousetip-msg","id","visible","staticStyle","padding-left","padding-bottom","md","data-vv-scope","PageLevel","TabIndex","data-vv-value-path","ref","prop","param","on","changeCheckbox","changeCheckbox_status","onBlur","model","value","callback","$$v","dataDetail","expression","staticRenderFns","AP_PaymentAdviceDvue_type_script_lang_js_","props","data","FormType","Module","CreditorCd","DebitNo","cDisplayColumn","showCheckBoxDelete","showNumber","comp","slot","compType","cIsAlwaysShow","cHideRowColumnCSS","cValidate","cName","cLabel","cLabelSize","cOrder","cKey","cType","cVisible","cProtect","cPageLevel","cTabIndex","cParentForm","cLastLabelShow","cWhenLabel","cRowDisable","checked","unchecked","watch","newData","oldData","length","isEditMode","computed","inputStatus","$store","getters","getLevel","getTab","getStatus","toUpperCase","DataRow","GetPage2Data","DataRowPage1","GetPage1Data","methods","index","allocationamt","outstandingamt","isCurrency","decimal","setToolbarButton","M_Head_Table","M_PageSize","M_TabClick","M_Pagination","M_Advance_Filter","M_Search","M_Refresh","M_Cancel","doDoubleClick","rowClicked","record","rowLink","url","$refs","modalTest","show","paramFromParent","$parent","showForm","getDataBy2","M_Insert","M_Update","_this","dataUpdate","param1","x","push","_Method_","_LineNo_","PageOrder","SubPortfolioCd","getDataUser","DebitNoDetail","debitno","CreditNo","creditno","AllocationAmt","replaceAllString","UserEdit","UserId","CurrencyCd","currencycd","A_Looping","OptionSeq","getOptionSeq","LineNo","Data","postJSONMulti","getUrlProsesDataPostMulti","then","response","msg","alertSuccess","commit","getToolbar","setButton","refreshListParent","ref_GridLooRental","doGetList","M_ClearForm","M_New","M_Edit","getDataBy","parameter","propGetDataBy","NoGetById","created","beforeMount","mounted","hideSideBarMenu","beforeUpdate","updated","beforeDestroy","destroyed","PageLevel_2_AP_PaymentAdviceDvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"js/chunk-771381ee.18e7a54f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"el\",style:('margin-top:10px;'),attrs:{\"mousetip\":\"\",\"mousetip-msg\":\"I'm a tooltip\"}},[_c('b-collapse',{attrs:{\"id\":\"collapse1\",\"visible\":true}},[_c('b-row',{staticStyle:{\"padding-left\":\"10px\",\"padding-bottom\":\"10px\"}},[_c('b-col',{staticClass:\"bColMasterForm\",attrs:{\"md\":\"12\",\"id\":\"col-left\"}},[_c('b-form',{attrs:{\"data-vv-scope\":'FormScope_' + _vm.PageLevel + '_' + _vm.TabIndex,\"data-vv-value-path\":'FormScope_' + _vm.PageLevel + '_' + _vm.TabIndex}},[_c('ABSGrid',{ref:\"ref_GridLooRental\",attrs:{\"prop\":_vm.param,\"PageLevel\":_vm.PageLevel,\"TabIndex\":_vm.TabIndex},on:{\"changeCheckbox\":_vm.changeCheckbox,\"changeCheckbox_status\":_vm.changeCheckbox_status,\"onBlur\":_vm.onBlur},model:{value:(_vm.dataDetail),callback:function ($$v) {_vm.dataDetail=$$v},expression:\"dataDetail\"}})],1)],1)],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n      <div :style=\"'margin-top:10px;'\" class=\"el\" mousetip mousetip-msg=\"I'm a tooltip\">          \r\n          <b-collapse id=\"collapse1\" :visible=\"true\">\r\n            <b-row  style=\"padding-left: 10px; padding-bottom: 10px; !important;\">     \r\n              <b-col md=\"12\" id=\"col-left\" class=\"bColMasterForm\">\t\r\n                <b-form :data-vv-scope=\"'FormScope_' + PageLevel + '_' + TabIndex\" :data-vv-value-path=\"'FormScope_' + PageLevel + '_' + TabIndex\">\r\n                  <ABSGrid\r\n                    :prop=\"param\"\r\n                    @changeCheckbox=\"changeCheckbox\"\r\n                    @changeCheckbox_status=\"changeCheckbox_status\"\r\n                    @onBlur=\"onBlur\"                    \r\n                    :PageLevel=\"PageLevel\"\r\n                    :TabIndex=\"TabIndex\"\r\n                    v-model=\"dataDetail\"\r\n                    ref=\"ref_GridLooRental\"\r\n                  />\r\n                </b-form>\r\n              </b-col>\r\n            </b-row>\r\n          </b-collapse>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {PageLevel:'', TabIndex: '', data: ''},\r\n        data () {\r\n            return {\r\n                FormType: \"Grid\",\r\n                Module:\"AP\",\r\n                dataDetail: [],\r\n                CreditorCd: '',\r\n                DebitNo: '',\r\n                param: {\r\n                    cDisplayColumn: 'creditno,referenceno,descs,amt=decimal,withholdingamt=decimal,outstandingamt=decimal,allocationamt=decimal,status,balanceamt=decimal,timeedit',\r\n                    showCheckBoxDelete: false,\r\n                    showNumber: true,\r\n                    // divStyle: '185',\r\n                    comp: [\r\n                        {\r\n                            slot: 'allocationamt',\r\n                            compType: 'ABSTextBoxOnly',\r\n                            cIsAlwaysShow: false,\r\n                            cHideRowColumnCSS: true,\r\n                            cValidate :'', \r\n                            cName: 'allocationamt', \r\n                            cLabel: '', \r\n                            cLabelSize: 4, \r\n                            cOrder: 0, \r\n                            cKey: false, \r\n                            cType: 'decimal',\r\n                            cVisible: true, \r\n                            cProtect: false, \r\n                            cPageLevel: this.PageLevel, \r\n                            cTabIndex: this.TabIndex, \r\n                            cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex  ,\r\n                            cLastLabelShow: false,\r\n                            cWhenLabel: false,\r\n                            cRowDisable: []\r\n                        },\r\n                        {\r\n                        slot: 'status',\r\n                        compType: 'ABSinputCheckBoxOnly',\r\n                        cName: 'status',\r\n                        cKey: false,\r\n                        cProtect: false,\r\n                        checked: 'Y',\r\n                        unchecked: 'N'\r\n                        // cValidate :'',\r\n                        // cLabel: '',\r\n                        // cLabelSize: 4,\r\n                        // cOptions: [{text:'', value: 'Y'}],\r\n                        // cOrder: 0,\r\n                        // cKey: false,\r\n                        // cVisible: true,\r\n                        // cProtect: false,\r\n                        // cDefault: '',\r\n                        // cPageLevel: this.PageLevel,\r\n                        // cTabIndex: this.TabIndex,\r\n                        // cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        // cHideRowColumnCSS: true,\r\n                        // cRowDisable: [] \r\n                    },\r\n                    ]\r\n                },\r\n            }\r\n        },\r\n        watch : {\r\n            dataDetail (newData, oldData) {                \r\n                if (newData.length > 0) {\r\n                this.isEditMode = true\r\n                } else {\r\n                this.isEditMode = false\r\n                }\r\n            }\r\n        },\r\n        computed : {\r\n            inputStatus() {\r\n                if (this.$store.getters.getLevel == this.PageLevel && this.$store.getters.getTab == this.TabIndex) {\r\n                    return this.$store.getters.getStatus.toUpperCase()\r\n                }\r\n                else {\r\n                    return 'VIEW'\r\n                }\r\n            },\r\n            DataRow(){\r\n                return this.$store.getters.GetPage2Data\r\n            },\r\n            DataRowPage1(){\r\n                return this.$store.getters.GetPage1Data\r\n            }\r\n        },\r\n        methods : {\r\n            // onBlur () {\r\n            //     // alert('blur')\r\n            // },\r\n            changeCheckbox (){\r\n                // alert('cekbox')\r\n            },\r\n            changeCheckbox_status(index,value){\r\n                if(value == 'Y'){\r\n                    this.dataDetail[index].allocationamt = this.dataDetail[index].outstandingamt\r\n                }else{\r\n                    this.dataDetail[index].allocationamt = this.isCurrency(0, this.decimal)\r\n                }\r\n            },\r\n            setToolbarButton () {\r\n            },\r\n            M_Head_Table () {\r\n            },\r\n            M_PageSize(){\r\n            },\r\n            M_TabClick(){\r\n                // this.getDataBy(this.$store.getters.GetPage1Data)\r\n                // this.paramFromParent()\r\n            },\r\n            M_Pagination(){\r\n            },\r\n            M_Advance_Filter(){\r\n            },\r\n            M_Search(data){\r\n            },\r\n            M_Refresh(){\r\n            },\r\n            M_Cancel() {\r\n                // this.paramFromParent()\r\n            },\t\t\r\n            doDoubleClick(){\r\n            },\r\n            rowClicked (record, index) {\r\n            },\r\n            rowLink: function(url){\r\n                this.$refs.modalTest.show()\r\n            },\r\n            paramFromParent(){\r\n                this.$parent.showForm = false\r\n                \r\n                let record = this.$store.getters.GetPage1Data\r\n                this.getDataBy2(record)\r\n            },\r\n            M_Insert() {   \r\n            },\r\n            M_Update () {  \r\n                var dataUpdate = []           \r\n                var param1 = []\r\n                for (let x = 0; x < this.dataDetail.length; x++) {\r\n\r\n\r\n                    param1.push({\r\n                        _Method_: 'UPDATE',\r\n                        _LineNo_: this.$parent.data.PageOrder,\r\n                        SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                        DebitNoDetail: this.dataDetail[x].debitno,\r\n                        CreditNo: this.dataDetail[x].creditno,\r\n                        AllocationAmt: this.replaceAllString(this.dataDetail[x].allocationamt, ',', ''),                        \r\n                        UserEdit: this.getDataUser().UserId,\r\n                        CurrencyCd: this.dataDetail[x].currencycd,\r\n                        CreditorCd: this.CreditorCd,\r\n                        DebitNo: this.DebitNo\r\n                    })   \r\n                    // param1[x]._Method_ = 'UPDATE'                                  \r\n                }\r\n                \r\n                dataUpdate.push({\r\n                    A_Looping: param1\r\n                })\r\n\r\n                var param = {\r\n                    OptionSeq: this.getOptionSeq().OptionSeq,\r\n                    LineNo: this.$parent.data.PageOrder,\r\n                    Data: dataUpdate\r\n                }\r\n\r\n                this.postJSONMulti (this.getUrlProsesDataPostMulti(), param)\r\n                .then(response => {\r\n                    if (response == null) return\r\n\r\n                    var msg = ' Update Success.'\r\n                    // if (this.isEditMode) {\r\n                    //     msg = 'Update' + msg\r\n                    // } else {\r\n                    //     msg = 'Insert' + msg\r\n                    // }\r\n                    this.alertSuccess(msg)\r\n                    this.$store.commit('setListDisable', false)\r\n                    this.$store.commit('setStatus', 'view')\r\n                    this.getToolbar().setButton(false)\r\n                    this.refreshListParent(true)\r\n                    this.$refs.ref_GridLooRental.doGetList('','eb_getList')\r\n                })              \r\n            },\r\n            M_ClearForm(){\r\n\r\n            },\r\n            M_New(){\r\n                \r\n            },\r\n            M_Edit(){\r\n                let record = this.$store.getters.GetPage1Data\r\n                this.CreditorCd = record.CreditorCd\r\n                this.DebitNo = record.DebitNo\r\n            },\r\n            getDataBy(){\r\n                this.getDataBy2()\r\n            },\r\n            getDataBy2 (record) {                \r\n                var parameter = {\r\n                    OptionSeq: this.getOptionSeq().OptionSeq,\r\n                    LineNo: this.$parent.data.PageOrder,\r\n                    SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                    CurrencyCd: record.CurrencyCd,\r\n                    DebitNo: record.DebitNo,\r\n                    CreditorCd: record.CreditorCd\r\n                }\r\n                \r\n                this.param.propGetDataBy = parameter\r\n                this.param.NoGetById = '2'\r\n                this.$refs.ref_GridLooRental.doGetList('','eb_getList')\r\n\r\n                \r\n            },\r\n        },\r\n        created: function () {            \r\n        },\r\n        beforeMount: function() {\r\n        },\r\n        mounted: function() {   \r\n            // this.toToolbar().doEdit(true)\r\n                    \r\n            this.hideSideBarMenu()\r\n        },\r\n        beforeUpdate: function() {\r\n        },\r\n        updated: function() {\r\n        },\r\n        beforeDestroy: function() {\r\n        },\r\n        destroyed: function() {\r\n        }\r\n    }\r\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AP_PaymentAdviceD.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AP_PaymentAdviceD.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AP_PaymentAdviceD.vue?vue&type=template&id=89520f84&\"\nimport script from \"./AP_PaymentAdviceD.vue?vue&type=script&lang=js&\"\nexport * from \"./AP_PaymentAdviceD.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"AP_PaymentAdviceD.vue\"\nexport default component.exports"],"sourceRoot":""}