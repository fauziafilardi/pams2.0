{"version":3,"sources":["webpack:///./src/views/TN/TN_CLBudget/PageLevel_1/TN_CLBudget.vue?de97","webpack:///src/views/TN/TN_CLBudget/PageLevel_1/TN_CLBudget.vue","webpack:///./src/views/TN/TN_CLBudget/PageLevel_1/TN_CLBudget.vue?d190","webpack:///./src/views/TN/TN_CLBudget/PageLevel_1/TN_CLBudget.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","prop","propList","title","data","QueryName","on","rowClicked","$parent","rowDblClicked","doDoubleClick","rowLinkClick","rowLink","pageSize","M_PageSize","pagination","M_Pagination","filter","M_Advance_Filter","headTable","M_Head_Table","refreshColumn","directives","name","rawName","value","expression","staticClass","style","mousetip","mousetip-msg","modifiers","collapse1","IEBy","Input","Edit","_v","_s","icon","id","visible","staticStyle","padding-left","padding-bottom","md","data-vv-scope","PageLevel","TabIndex","data-vv-value-path","ref","PI_clbudgetno","model","M_TN_CLBudget","callback","$$v","$set","PI_budgetdate","input","OnbudgetdateChange","PI_budgetyear","onBlur","onBlurBudgetYear","PI_budgetsource","PI_descs","PI_remarks","OnremarksChange","param","onBlur_rentalrate","budgetDetail","PTAnalysis","staticRenderFns","TN_CLBudgetvue_type_script_lang_js_","props","isOnBlurBudgetYear","cInsertKey","FormType","Module","initialWhere","getDataUser","SubPortfolioCd","LineNo","PageOrder","OrderBy","SourceField","ParamView","BudgetRunningCd","subportfoliocd","clbudgetno","budgetdate","M_FormatingDate","Date","budgetyear","descs","confirmedby","confirmeddate","budgetsource","budgetsourceDesc","status","remarks","userinput","useredit","UserId","lastupdatestamp","rowid","cValidate","cName","cLabel","cLabelSize","cOrder","cKey","cType","cVisible","cProtect","cPageLevel","cTabIndex","cParentForm","cValue","cDefault","cResize","cReadOnly","cRows","cMaxRows","cSize","cPageMasterSeq","PageMasterSeq","cFormPageNo","cDisplayColumn","comp","slot","compType","cIsAlwaysShow","cHideRowColumnCSS","cFormat","cLabelValue","cWhenLabel","computed","inputStatus","$store","getters","getLevel","getTab","getStatus","toUpperCase","DataRow","GetPage1Data","methods","year","record","CLBudgetNo","getDataBy2","getBudgetSource","budgetYear","OptionFunctionCd","ModuleCd","BudgetYear","FnDynamicFunction","then","ress","CountData","index","totalrental","parseFloat","replaceAllString","totalarea","decimal","rentalrate","isCurrency","toString","$refs","ref_GridCLBudget","recalculateTotal","_this","$nextTick","$forceUpdate","_this2","setToolbarButton","M_TabClick","M_Search","M_Refresh","M_Cancel","url","modalTest","show","paramFromParent","M_Post","dt","getDetailData","parameterData","x","length","console","log","starttooffer","push","_LineNo_","_Method_","ZoneCd","zonecd","StartToOffer","RentalRate","Jan","jan","Feb","feb","Mar","mar","Apr","apr","May","may","Jun","jun","Jul","jul","Aug","aug","Sept","sept","Oct","oct","Nov","nov","Dec","dec","UserInput","M_Insert","_this3","FnGenerateRunningCode","RunningCode","dataInsert","param1","BudgetDate","Descs","Remarks","param2","A_Insert","B_Looping","OptionSeq","getOptionSeq","Data","postJSONMulti","getUrlProsesDataPostMulti","response","resultInsert","Message","M_Update","_this4","dataUpdate","UserEdit","LastUpdateStamp","A_Update","resultUpdate","M_ClearForm","fn_getSpecTN","_this5","CLBudgetRunningCd","M_New","M_Edit","M_Delete","_this6","FormToABSList","getRowSelected","dataDelete","forEach","_Message_","getUrlNewDeleteMulti","resultDelete","getDataBy","_this7","postEncode","getUrlById","momentDate","_this8","BudgetNo","j","zonedescs","chargeareadescs","chargeperioddescs","previoustotalarea","previousrentalrate","previoustotalrental","previousjan","previousfeb","previousmar","previousapr","previousmay","previousjun","previousjul","previousaug","previoussept","previousoct","previousnov","previousdec","allColumn","fields","fieldDecimal","setHeaderTable","items","beforeCreate","created","commit","getToolbar","ProcessPS","beforeMount","mounted","hideSideBarMenu","doGetList","footClone","beforeUpdate","updated","beforeDestroy","destroyed","PageLevel_1_TN_CLBudgetvue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d210fca.b55e33d4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ABSListVuex',{attrs:{\"prop\":_vm.propList,\"title\":_vm.data.QueryName},on:{\"rowClicked\":_vm.$parent.rowClicked,\"rowDblClicked\":_vm.$parent.doDoubleClick,\"rowLinkClick\":_vm.$parent.rowLink,\"pageSize\":_vm.$parent.M_PageSize,\"pagination\":_vm.$parent.M_Pagination,\"filter\":_vm.$parent.M_Advance_Filter,\"headTable\":_vm.$parent.M_Head_Table,\"refreshColumn\":_vm.$parent.refreshColumn}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.$parent.showForm),expression:\"$parent.showForm\"}],staticClass:\"el\",style:('margin-top:10px;'),attrs:{\"mousetip\":\"\",\"mousetip-msg\":\"I'm a tooltip\"}},[_c('div',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle.collapse1\",modifiers:{\"collapse1\":true}}],staticClass:\"div-collapse\"},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.IEBy.Input && _vm.IEBy.Edit),expression:\"IEBy.Input && IEBy.Edit\"}],staticClass:\"master-span\"},[_vm._v(\"\\n                    Input By : \"+_vm._s(_vm.IEBy.Input)+\" | Edit By : \"+_vm._s(_vm.IEBy.Edit)+\" \"),_c('font-awesome-icon',{staticClass:\"icon-style-1__master\",attrs:{\"icon\":\"sort-down\"}})],1)]),_c('b-collapse',{attrs:{\"id\":\"collapse1\",\"visible\":true}},[_c('b-row',{staticStyle:{\"padding-left\":\"10px\",\"padding-bottom\":\"10px\"}},[_c('b-col',{staticClass:\"bColMasterForm\",attrs:{\"md\":\"12\",\"id\":\"col-left\"}},[_c('b-form',{attrs:{\"data-vv-scope\":'FormScope_' + _vm.PageLevel + '_' + _vm.TabIndex,\"data-vv-value-path\":'FormScope_' + _vm.PageLevel + '_' + _vm.TabIndex}},[_c('b-row',{staticStyle:{\"padding-left\":\"10px\"}},[_c('b-col',{attrs:{\"md\":\"12\",\"id\":\"col-left\"}},[_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('ABSinputTextVuex',{ref:\"ref_clbudgetno\",attrs:{\"prop\":_vm.PI_clbudgetno},model:{value:(_vm.M_TN_CLBudget.clbudgetno),callback:function ($$v) {_vm.$set(_vm.M_TN_CLBudget, \"clbudgetno\", $$v)},expression:\"M_TN_CLBudget.clbudgetno\"}})],1)],1),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('ABSinputDateVuex',{ref:\"ref_budgetdate\",attrs:{\"prop\":_vm.PI_budgetdate},on:{\"input\":_vm.OnbudgetdateChange},model:{value:(_vm.M_TN_CLBudget.budgetdate),callback:function ($$v) {_vm.$set(_vm.M_TN_CLBudget, \"budgetdate\", $$v)},expression:\"M_TN_CLBudget.budgetdate\"}})],1)],1),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('ABSinputTextVuex',{ref:\"ref_budgetyear\",attrs:{\"prop\":_vm.PI_budgetyear},on:{\"onBlur\":_vm.onBlurBudgetYear},model:{value:(_vm.M_TN_CLBudget.budgetyear),callback:function ($$v) {_vm.$set(_vm.M_TN_CLBudget, \"budgetyear\", $$v)},expression:\"M_TN_CLBudget.budgetyear\"}})],1)],1),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('ABSCompute',{ref:\"ref_budgetsource\",attrs:{\"prop\":_vm.PI_budgetsource},model:{value:(_vm.M_TN_CLBudget.budgetsourceDesc),callback:function ($$v) {_vm.$set(_vm.M_TN_CLBudget, \"budgetsourceDesc\", $$v)},expression:\"M_TN_CLBudget.budgetsourceDesc\"}})],1)],1),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('ABSinputTextVuex',{ref:\"ref_descs\",attrs:{\"prop\":_vm.PI_descs},model:{value:(_vm.M_TN_CLBudget.descs),callback:function ($$v) {_vm.$set(_vm.M_TN_CLBudget, \"descs\", $$v)},expression:\"M_TN_CLBudget.descs\"}})],1)],1),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('ABSTextAreaVuex',{ref:\"ref_remarks\",attrs:{\"prop\":_vm.PI_remarks},on:{\"input\":_vm.OnremarksChange},model:{value:(_vm.M_TN_CLBudget.remarks),callback:function ($$v) {_vm.$set(_vm.M_TN_CLBudget, \"remarks\", $$v)},expression:\"M_TN_CLBudget.remarks\"}})],1)],1),_c('b-col',{attrs:{\"md\":\"12\",\"id\":\"col-left\"}})],1)],1),_c('ABSGrid',{ref:\"ref_GridCLBudget\",attrs:{\"prop\":_vm.param,\"PageLevel\":_vm.PageLevel,\"TabIndex\":_vm.TabIndex},on:{\"onBlur_rentalrate\":_vm.onBlur_rentalrate},model:{value:(_vm.budgetDetail),callback:function ($$v) {_vm.budgetDetail=$$v},expression:\"budgetDetail\"}}),_c('ABSTAnalysis',{attrs:{\"prop\":_vm.PTAnalysis}})],1)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>        \r\n    <ABSListVuex\r\n      :prop = \"propList\"\r\n      :title = \"data.QueryName\"\r\n      @rowClicked = \"$parent.rowClicked\"\r\n      @rowDblClicked = \"$parent.doDoubleClick\"\r\n      @rowLinkClick = \"$parent.rowLink\"\r\n      @pageSize = \"$parent.M_PageSize\"\r\n      @pagination = \"$parent.M_Pagination\"\r\n      @filter = \"$parent.M_Advance_Filter\"\r\n      @headTable = \"$parent.M_Head_Table\"\r\n      @refreshColumn = \"$parent.refreshColumn\"\r\n    />\r\n\r\n\r\n        <div v-show=\"$parent.showForm\"  :style=\"'margin-top:10px;'\" class=\"el\" mousetip mousetip-msg=\"I'm a tooltip\">\r\n            <div class=\"div-collapse\" v-b-toggle.collapse1>\r\n                <span class=\"master-span\" v-show=\"IEBy.Input && IEBy.Edit\">\r\n                    Input By : {{IEBy.Input}} | Edit By : {{IEBy.Edit}} <font-awesome-icon icon=\"sort-down\" class=\"icon-style-1__master\" /> \r\n                </span>\r\n            </div>\r\n            <b-collapse id=\"collapse1\" :visible=\"true\">\r\n                <b-row  style=\"padding-left: 10px; padding-bottom: 10px; !important;\">     \r\n\t\t\t\t\t<b-col md=\"12\" id=\"col-left\" class=\"bColMasterForm\">\t\r\n\t\t\t\t\t\t<b-form :data-vv-scope=\"'FormScope_' + PageLevel + '_' + TabIndex\" :data-vv-value-path=\"'FormScope_' + PageLevel + '_' + TabIndex\">\r\n                            <b-row style=\"padding-left:10px;\">\t\t\t\t\t\r\n                                <b-col md=\"12\" id=\"col-left\"> <!-- table open -->\r\n                                    <b-row>\r\n                                      <b-col  md=\"6\">\r\n                                        <ABSinputTextVuex :prop=\"PI_clbudgetno\" v-model=\"M_TN_CLBudget.clbudgetno\"  ref=\"ref_clbudgetno\"/>\r\n                                      </b-col>\r\n                                    </b-row>\r\n                                    <b-row>\r\n                                      <b-col  md=\"6\">\r\n                                        <ABSinputDateVuex @input=\"OnbudgetdateChange\" :prop=\"PI_budgetdate\" v-model=\"M_TN_CLBudget.budgetdate\"  ref=\"ref_budgetdate\" />\r\n                                      </b-col>\r\n                                    </b-row>\r\n                                    <b-row>\r\n                                      <b-col  md=\"6\">\r\n                                        <ABSinputTextVuex :prop=\"PI_budgetyear\" v-model=\"M_TN_CLBudget.budgetyear\" @onBlur=\"onBlurBudgetYear\" ref=\"ref_budgetyear\"/>\r\n                                      </b-col>\r\n                                    </b-row>\r\n                                    <b-row>\r\n                                      <b-col  md=\"6\">\r\n                                        <ABSCompute :prop=\"PI_budgetsource\" v-model=\"M_TN_CLBudget.budgetsourceDesc\"  ref=\"ref_budgetsource\" />\r\n                                      </b-col>\r\n                                    </b-row>\r\n                                    <b-row>\r\n                                      <b-col  md=\"6\">\r\n                                        <ABSinputTextVuex :prop=\"PI_descs\" v-model=\"M_TN_CLBudget.descs\"  ref=\"ref_descs\"/>\r\n                                      </b-col>\r\n                                    </b-row>\r\n                                    <b-row>\r\n                                      <b-col  md=\"6\">\r\n                                        <ABSTextAreaVuex @input=\"OnremarksChange\" :prop=\"PI_remarks\" v-model=\"M_TN_CLBudget.remarks\"  ref=\"ref_remarks\" />\r\n                                      </b-col>\r\n                                    </b-row>\r\n                                <b-col md=\"12\" id=\"col-left\"> <!-- table open -->\r\n                                </b-col> <!-- table close -->\r\n                                </b-col> <!-- table close -->\r\n                  \r\n\t\t\t\t\t\t\t</b-row>\r\n                            <ABSGrid\r\n                                :prop=\"param\"\r\n                                @onBlur_rentalrate=\"onBlur_rentalrate\"\r\n                                :PageLevel=\"PageLevel\"\r\n                                :TabIndex=\"TabIndex\"\r\n                                v-model=\"budgetDetail\"\r\n                                ref=\"ref_GridCLBudget\"\r\n                            />\r\n                                <!-- @changeCheckbox=\"changeCheckbox\"\r\n                                @onBlur=\"onBlur\"\r\n                                @total=\"sumTotal\" -->\r\n\t\t\t\t\t\t\t<ABSTAnalysis :prop=\"PTAnalysis\" />\r\n\t\t\t\t\t\t</b-form>\r\n\t\t\t\t\t</b-col>\r\n                </b-row>\r\n            </b-collapse>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    props: {PageLevel: '', TabIndex: '', data: ''},\r\n    data() {\r\n        return {\r\n        isOnBlurBudgetYear: false,\r\n\t\tcInsertKey:'',\r\n\t\tFormType: \"List\",\r\n\t\tModule:\"TN\",\r\n            propList: {\r\n                initialWhere: \"SubPortfolioCd ='\"+this.getDataUser().SubPortfolioCd+\"' AND Status='N'\",\r\n                LineNo: this.$parent.data.PageOrder,\r\n                PageLevel: this.PageLevel,\r\n                TabIndex: this.TabIndex, \r\n                OrderBy: '', \r\n                SourceField: '', \r\n                ParamView: '' \r\n            },\r\n       \r\n            IEBy: {Input: '', Edit: ''},   \t\t\t\r\n            BudgetRunningCd: '',\r\n\r\n            M_TN_CLBudget :{\r\n                subportfoliocd: this.getDataUser().SubPortfolioCd,\r\n                clbudgetno: '',\r\n                budgetdate: this.M_FormatingDate(new Date()),\r\n                budgetyear: '',\r\n                descs: '',\r\n                confirmedby: '',\r\n                confirmeddate: '',\r\n                budgetsource: '',\r\n                budgetsourceDesc: '',\r\n                status: '',\r\n                remarks: '',\r\n                userinput: '',\r\n                useredit: this.getDataUser().UserId,\r\n                lastupdatestamp: 0,\r\n                rowid: 0\r\n                    }\r\n            ,\r\n            PI_clbudgetno: { \r\n                cValidate :'required|max:20', \r\n                cName: 'clbudgetno', \r\n                cLabel: 'Budget No', \r\n                cLabelSize: 4, \r\n                cOrder: 0, \r\n                cKey: true, \r\n                cType: 'text',\r\n                cVisible: true, \r\n                cProtect: false, \r\n                cPageLevel: this.PageLevel, \r\n                cTabIndex: this.TabIndex, \r\n                cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex \r\n            }, \r\n            PI_budgetdate: { \r\n                cValidate :'required', \r\n                cName: 'budgetdate', \r\n                cLabel: 'Budget Date', \r\n                cLabelSize: 4, \r\n                cOrder: 0, \r\n                cKey: true, \r\n                cVisible:  true, \r\n                cProtect: false, \r\n                cPageLevel: this.PageLevel, \r\n                cTabIndex: this.TabIndex, \r\n                cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex \r\n            }, \r\n            PI_budgetyear: { \r\n                cValidate :'max:4', \r\n                cName: 'budgetyear', \r\n                cLabel: 'Budget Year', \r\n                cLabelSize: 4, \r\n                cOrder: 0, \r\n                cKey: true, \r\n                cType: 'number',\r\n                cVisible: true, \r\n                cProtect: false, \r\n                cPageLevel: this.PageLevel, \r\n                cTabIndex: this.TabIndex, \r\n                cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex \r\n            }, \r\n            PI_budgetsource: { \r\n                cLabel: 'Source ', \r\n                cLabelSize: 4, \r\n                cValue: '', \r\n                cPageLevel: this.PageLevel, \r\n                cTabIndex: this.TabIndex, \r\n                cVisible: true \r\n            }, \r\n            PI_descs: { \r\n                cValidate :'max:60', \r\n                cName: 'descs', \r\n                cLabel: 'Description', \r\n                cLabelSize: 4, \r\n                cOrder: 0, \r\n                cKey: false, \r\n                cType: 'text',\r\n                cVisible: true, \r\n                cProtect: false, \r\n                cPageLevel: this.PageLevel, \r\n                cTabIndex: this.TabIndex, \r\n                cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex \r\n            }, \r\n            PI_remarks: { \r\n                cValidate :'', \r\n                cName:'remarks', \r\n                cLabel:'Remarks', \r\n                cLabelSize: 4, \r\n                cOrder:0, \r\n                cKey: false, \r\n                cDefault: '', \r\n                cProtect: false, \r\n                cVisible: true, \r\n                cResize: false, \r\n                cReadOnly: false, \r\n                cRows: 3, \r\n                cMaxRows: 3, \r\n                cSize: 'md', \r\n                cPageLevel: this.PageLevel, \r\n                cTabIndex: this.TabIndex, \r\n                cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex, \r\n            }, \r\n\r\n\t\t\tPTAnalysis: {\r\n                cPageLevel: this.PageLevel,\r\n                cTabIndex: this.TabIndex,\r\n                cPageMasterSeq: this.data.PageMasterSeq,\r\n                cFormPageNo: this.data.PageOrder,\r\n\t\t\t\tcProtect: false\r\n            },\r\n            param: {\r\n                cDisplayColumn: 'zonecd,zonedescs,chargeareadescs,chargeperioddescs,starttooffer,totalarea=decimal,rentalrate=decimal,totalrental=decimal,jan=decimal,feb=decimal,mar=decimal,apr=decimal,may=decimal,jun=decimal,jul=decimal,aug=decimal,sept=decimal,oct=decimal,nov=decimal,dec=decimal',\r\n                // cTotalColumn: 'totalbaserent',\r\n                comp: [\r\n                    // {\r\n                    //     slot: 'zonecd',\r\n                    //     compType: 'ABSTextBoxOnly',\r\n                        // cIsAlwaysShow: false,\r\n                        // cHideRowColumnCSS: true,\r\n                    //     cValidate :'', \r\n                    //     cName: 'zonecd', \r\n                    //     cLabel: '', \r\n                    //     cLabelSize: 4, \r\n                    //     cOrder: 0, \r\n                    //     cKey: false, \r\n                    //     cType: '',\r\n                    //     cVisible: true, \r\n                    //     cProtect: false, \r\n                    //     cPageLevel: this.PageLevel, \r\n                    //     cTabIndex: this.TabIndex, \r\n                    //     cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex  \r\n                    // },\r\n                    // {\r\n                    //     slot: 'zonedescs',\r\n                    //     compType: 'ABSTextBoxOnly',\r\n                        // cIsAlwaysShow: false,\r\n                        // cHideRowColumnCSS: true,\r\n                    //     cValidate :'', \r\n                    //     cName: 'zonedescs', \r\n                    //     cLabel: '', \r\n                    //     cLabelSize: 4, \r\n                    //     cOrder: 0, \r\n                    //     cKey: false, \r\n                    //     cType: '',\r\n                    //     cVisible: true, \r\n                    //     cProtect: false, \r\n                    //     cPageLevel: this.PageLevel, \r\n                    //     cTabIndex: this.TabIndex, \r\n                    //     cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex  \r\n                    // },\r\n                    {\r\n                        slot: 'starttooffer',\r\n                        compType: 'ABSDateOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'',\r\n                        cName: 'starttooffer',\r\n                        cLabel: '',\r\n                        cLabelSize: 4,\r\n                        cOrder: 0,\r\n                        cKey: false,\r\n                        cType: '',\r\n                        cVisible: true,\r\n                        cProtect: false,\r\n                        cFormat: 'dd/MM/yyyy',\r\n                        cPageLevel: this.PageLevel,\r\n                        cTabIndex: this.TabIndex,\r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cLabelValue: 'Previous'\r\n                    },\r\n                    // {\r\n                    //     slot: 'totalarea',\r\n                    //     compType: 'ABSTextBoxOnly',\r\n                    //     cIsAlwaysShow: false,\r\n                    //     cValidate :'', \r\n                    //     cName: 'totalarea', \r\n                    //     cLabel: '', \r\n                    //     cLabelSize: 4, \r\n                    //     cOrder: 0, \r\n                    //     cKey: false, \r\n                    //     cType: 'decimal',\r\n                    //     cVisible: true, \r\n                    //     cProtect: false, \r\n                    //     cPageLevel: this.PageLevel, \r\n                    //     cTabIndex: this.TabIndex, \r\n                    //     cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex  \r\n                    // },\r\n                    {\r\n                        slot: 'rentalrate',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'rentalrate', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'jan',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'jan', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'feb',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'feb', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'mar',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'mar', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'apr',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'apr', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'may',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'may', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'jun',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'jun', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'jul',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'jul', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'aug',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'aug', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'sept',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'sept', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'oct',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'oct', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'nov',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'nov', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                    {\r\n                        slot: 'dec',\r\n                        compType: 'ABSTextBoxOnly',\r\n                        cIsAlwaysShow: false,\r\n                        cHideRowColumnCSS: true,\r\n                        cValidate :'', \r\n                        cName: 'dec', \r\n                        cLabel: '', \r\n                        cLabelSize: 4, \r\n                        cOrder: 0, \r\n                        cKey: false, \r\n                        cType: 'decimal',\r\n                        cVisible: true, \r\n                        cProtect: false, \r\n                        cPageLevel: this.PageLevel, \r\n                        cTabIndex: this.TabIndex, \r\n                        cParentForm: 'FormScope_' + this.PageLevel + '_' + this.TabIndex,\r\n                        cWhenLabel: 'genap'\r\n                    },\r\n                ]\r\n            },\r\n            budgetDetail: []\r\n        }\r\n    },\r\n\tcomputed : {\r\n    inputStatus() {\r\n      if(this.$store.getters.getLevel == this.PageLevel && this.$store.getters.getTab == this.TabIndex){\r\n        return this.$store.getters.getStatus.toUpperCase()\r\n      }\r\n      else {\r\n        return 'VIEW'\r\n      }\r\n    },\r\n\tDataRow(){\r\n\t\treturn this.$store.getters.GetPage1Data\r\n\t}\r\n  },\r\n    methods: {\r\n        onBlurBudgetYear (year) {\r\n            var record = {\r\n                CLBudgetNo: ''\r\n            }\r\n            this.getDataBy2(record, year)\r\n            this.isOnBlurBudgetYear = true\r\n        },\r\n        getBudgetSource (budgetYear) {\r\n            var param = {\r\n                OptionFunctionCd: \"GetBudgetSource\",\r\n                ModuleCd: this.Module,\r\n                SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                BudgetYear: budgetYear\r\n            }\r\n\r\n            this.FnDynamicFunction(param)\r\n            .then(ress => {\r\n                if (ress == null) return\r\n\r\n                // if (ress.length < 1) return\r\n\r\n                var data = ress[0]\r\n                data.CountData\r\n            })\r\n        },\r\n        onBlur_rentalrate (index) {\r\n            this.budgetDetail[index].totalrental = parseFloat(this.replaceAllString(this.budgetDetail[index].totalarea, ',', ''), this.decimal) * parseFloat(this.replaceAllString(this.budgetDetail[index].rentalrate, ',', ''), this.decimal)\r\n            \r\n            // this.budgetDetail[index].totalarea = this.isCurrency(this.budgetDetail[index].totalarea, this.decimal).toString()\r\n            // this.budgetDetail[index].rentalrate = this.isCurrency(this.budgetDetail[index].rentalrate, this.decimal).toString()\r\n\r\n            this.budgetDetail[index].totalrental = this.isCurrency(this.budgetDetail[index].totalrental, this.decimal).toString()\r\n\r\n            this.$refs.ref_GridCLBudget.recalculateTotal()\r\n        },\r\n        OnbudgetdateChange (data) {\r\n        this.$nextTick(() => {\r\n            if (this.inputStatus != \"VIEW\") {\r\n//{budgetdate}\r\n            }\r\n        })\r\n        this.$forceUpdate()\r\n        },\r\n        OnremarksChange (data) {\r\n        this.$nextTick(() => {\r\n            if (this.inputStatus != \"VIEW\") {\r\n//{remarks}\r\n            }\r\n        })\r\n        this.$forceUpdate()\r\n        },\r\n\t\r\n\t\tsetToolbarButton () {\r\n           //this.getToolbar().statusFunction[4].disabled = false\r\n\t\t},\r\n        M_Head_Table () {\r\n        },\r\n        M_PageSize(){\r\n        },\r\n        M_TabClick(){\r\n        },\r\n        M_Pagination(){\r\n        },\r\n        M_Advance_Filter(){\r\n        },\r\n        M_Search(data){\r\n        },\r\n        M_Refresh(){\r\n        },\r\n\t\tM_Cancel() {\t\t\t\r\n\t\t},\t\t\r\n\t\tdoDoubleClick(){\r\n        },\r\n        rowClicked (record, index) {\r\n        },\r\n        rowLink: function(url){\r\n            this.$refs.modalTest.show()\r\n        },\t\t\r\n\t\tparamFromParent(){\r\n        },\t\t\r\n        M_Post(dt){\r\n        },\r\n        getDetailData () {\r\n            var parameterData = []\r\n            for (let x = 0 ; x < this.budgetDetail.length ; x ++) {\r\n               \r\n                if (x % 2 == 0) {\r\n                    console.log(this.budgetDetail[x].starttooffer)\r\n                    if(this.budgetDetail[x].starttooffer !='Invalid date'){\r\n                        parameterData.push({\r\n                        _LineNo_: this.$parent.data.PageOrder,\r\n                        _Method_: 'SAVE2',\r\n                        SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                        CLBudgetNo: this.M_TN_CLBudget.clbudgetno,\r\n                        \r\n                        ZoneCd: this.budgetDetail[x].zonecd,\r\n                        StartToOffer: this.budgetDetail[x].starttooffer,\r\n                        RentalRate: this.replaceAllString(this.budgetDetail[x].rentalrate, ',', ''),\r\n\r\n                        Jan: this.budgetDetail[x].jan,\r\n                        Feb: this.budgetDetail[x].feb,\r\n                        Mar: this.budgetDetail[x].mar,\r\n                        Apr: this.budgetDetail[x].apr,\r\n                        May: this.budgetDetail[x].may,\r\n                        Jun: this.budgetDetail[x].jun,\r\n                        Jul: this.budgetDetail[x].jul,\r\n                        Aug: this.budgetDetail[x].aug,\r\n                        Sept: this.budgetDetail[x].sept,\r\n                        Oct: this.budgetDetail[x].oct,\r\n                        Nov: this.budgetDetail[x].nov,\r\n                        Dec: this.budgetDetail[x].dec,\r\n\r\n                        UserInput: this.getDataUser().UserId\r\n                    })\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            return parameterData\r\n        },\r\n        M_Insert() {\r\n\r\n            if(this.BudgetRunningCd !=''){\r\n                this.FnGenerateRunningCode(\r\n                this.getDataUser().SubPortfolioCd,\r\n                this.BudgetRunningCd,\r\n                this.getDataUser().UserId,\r\n                this.M_TN_CLBudget.budgetdate\r\n                ).then(dt =>{\r\n                    if (dt == null) return\r\n                    this.M_TN_CLBudget.clbudgetno = dt.RunningCode\r\n\r\n                    var dataInsert = []\r\n                    var param1 = {\r\n                        _Method_: 'SAVE',\r\n                        _LineNo_: this.$parent.data.PageOrder,\r\n                        SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                        CLBudgetNo: this.M_TN_CLBudget.clbudgetno,\r\n                        BudgetDate: this.M_TN_CLBudget.budgetdate == '' || this.M_TN_CLBudget.budgetdate == null ? 'NULL' : this.M_TN_CLBudget.budgetdate ,\r\n                        BudgetYear: this.M_TN_CLBudget.budgetyear,\r\n                        Descs: this.M_TN_CLBudget.descs,\r\n                        Remarks: this.M_TN_CLBudget.remarks,\r\n                        UserInput: this.getDataUser().UserId\r\n                    }\r\n\r\n                    var param2 = this.getDetailData()\r\n\r\n                    dataInsert.push({\r\n                        A_Insert: param1,\r\n                        B_Looping: param2\r\n                    })\r\n\r\n                    var param = {\r\n                        OptionSeq: this.getOptionSeq().OptionSeq,\r\n                        LineNo: this.$parent.data.PageOrder,\r\n                        Data: dataInsert\r\n                    }\r\n                    \r\n                    this.postJSONMulti (this.getUrlProsesDataPostMulti(), param)\r\n                    .then(response => {\r\n                    if (response == null) return\r\n                        // this.alertSuccess('Data Has Been Save Successfully')\r\n                        this.$parent.resultInsert(response.Message)\r\n                    })\r\n                })\r\n            }\r\n            \r\n        },\r\n        M_Update () {\r\n\r\n            var dataUpdate = []\r\n            var param1 = {\r\n                _Method_: 'UPDATE',\r\n                _LineNo_: this.$parent.data.PageOrder,\r\n                SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                CLBudgetNo: this.M_TN_CLBudget.clbudgetno,\r\n                BudgetDate: this.M_TN_CLBudget.budgetdate == '' || this.M_TN_CLBudget.budgetdate == null ? 'NULL' : this.M_TN_CLBudget.budgetdate ,\r\n                BudgetYear: this.M_TN_CLBudget.budgetyear,\r\n                Descs: this.M_TN_CLBudget.descs,\r\n                Remarks: this.M_TN_CLBudget.remarks,\r\n                UserEdit: this.getDataUser().UserId ,\r\n                LastUpdateStamp: this.M_TN_CLBudget.lastupdatestamp\r\n            }\r\n\r\n            var param2 = this.getDetailData()\r\n\r\n            dataUpdate.push({\r\n                A_Update: param1,\r\n                B_Looping: param2\r\n            })\r\n\r\n            var param = {\r\n                OptionSeq: this.getOptionSeq().OptionSeq,\r\n                LineNo: this.$parent.data.PageOrder,\r\n                Data: dataUpdate\r\n            }\r\n            \r\n            this.postJSONMulti (this.getUrlProsesDataPostMulti(), param)\r\n            .then(response => {\r\n            if (response == null) return\r\n                this.$parent.resultUpdate('Data Has Been Save Successfully')\r\n            })\r\n        },\r\n\t\tM_ClearForm(){\r\n            this.M_TN_CLBudget = {\r\n                subportfoliocd: this.getDataUser().SubPortfolioCd,\r\n                clbudgetno: '',\r\n                budgetdate: this.M_FormatingDate(new Date()),\r\n                budgetyear: '',\r\n                descs: '',\r\n                confirmedby: '',\r\n                confirmeddate: '',\r\n                budgetsource: '',\r\n                status: '',\r\n                remarks: '',\r\n                userinput: '',\r\n                useredit: this.getDataUser().UserId,\r\n                lastupdatestamp: 0,\r\n                rowid: 0\r\n                    }\r\n            \t\t\r\n\t\t},\r\n        fn_getSpecTN(){\r\n            var param = {\r\n                OptionFunctionCd: \"GetSpecification\",\r\n                ModuleCd: this.Module,\r\n                SubPortfolioCd: this.getDataUser().SubPortfolioCd\r\n              }\r\n\r\n              this.FnDynamicFunction(param)\r\n              .then(ress => {\r\n                if (ress == null) return\r\n\r\n                if (ress.length < 1) return\r\n\r\n                var data = ress[0]\r\n\r\n                if (data.CLBudgetRunningCd!=''){\r\n                    this.BudgetRunningCd = data.CLBudgetRunningCd\r\n                    this.PI_clbudgetno.cValidate=''\r\n                    this.M_TN_CLBudget.clbudgetno ='(AUTO)'\r\n                    this.PI_clbudgetno.cProtect = true\r\n                } else {\r\n                    this.PI_clbudgetno.cValidate='required|max:20'\r\n                    this.PI_clbudgetno.cProtect = false\r\n                    this.BudgetRunningCd = ''\r\n                }\r\n\r\n                \r\n                \r\n\r\n              })\r\n        },\r\n        M_New(){\r\n            this.fn_getSpecTN()\r\n\r\n            var record = {\r\n                    CLBudgetNo: ''\r\n                }\r\n           this.getDataBy2(record, 0)\r\n\r\n\r\n        // [Global:GetBudgetRunningCd].then(FnOpt1 => { if (FnOpt1 != null) { \r\n        //      if (FnOpt1.CLBudgetRunningCd != \"\" && FnOpt1.CLBudgetRunningCd != null)\r\n        //           { this.PI_clbudgetno.cProtect = true\r\n        //           this.M_TN_CLBudget.clbudgetno = \"(auto)\" }\r\n        // else {\r\n        //      this.PI_clbudgetno.cProtect = false\r\n        //           this.M_TN_CLBudget.clbudgetno = \"\" } } })\r\n\t\t\t\r\n        },\r\n        M_Edit(){\r\n        },\r\n        M_Delete(dt){       \r\n\t\t\tvar data = this.FormToABSList().getRowSelected()  \r\n\t\t\tvar dataDelete = []\r\n\r\n\t\t\tdata.forEach((value) => {\r\n\t\t\t\t\r\n\t\t\t\tdataDelete.push({\r\n                    SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                    CLBudgetNo: value.CLBudgetNo,\r\n                    LastUpdateStamp: value.LastUpdateStamp,\r\n                    _Message_:''\r\n                })\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tvar param = {\r\n                OptionSeq: this.getOptionSeq().OptionSeq,\r\n                LineNo: this.$parent.data.PageOrder,\r\n                Data: dataDelete\r\n            }\r\n            \r\n            this.postJSONMulti( this.getUrlNewDeleteMulti(), param )\r\n            .then(response => {\r\n                if (response == null) return\r\n\r\n                this.$parent.resultDelete()\r\n            })           \r\n        },        \r\n        getDataBy (record) {\r\n            var param = {\r\n                OptionSeq: this.getOptionSeq().OptionSeq,\r\n                LineNo: this.$parent.data.PageOrder,\r\n                SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                clbudgetno: record.CLBudgetNo\r\n            }\r\n\r\n            this.postEncode( this.getUrlById(), param )\r\n            .then(response => {\r\n                // response from API\r\n                if(response == null) return\r\n                \r\n                var data = response.Data[0]\r\n\r\n                this.M_TN_CLBudget = {\r\n                    subportfoliocd: data.subportfoliocd,\r\n                    clbudgetno: data.clbudgetno,\r\n                    budgetdate: this.momentDate(data.budgetdate),\r\n                    budgetyear: data.budgetyear,\r\n                    descs: data.descs,\r\n                    confirmedby: data.confirmedby,\r\n                    confirmeddate: data.confirmeddate,\r\n                    budgetsource: data.budgetsource,\r\n                    budgetsourceDesc: data.budgetsource == 'R' ? 'Revision' : 'New Budget',\r\n                    status: data.status,\r\n                    remarks: data.remarks,\r\n                    userinput: data.userinput,\r\n                    useredit: data.useredit,\r\n                    lastupdatestamp: record.LastUpdateStamp,\r\n                    rowid: data.rowid\r\n                }\r\n\r\n                this.IEBy.Input = data.userinput\r\n                this.IEBy.Edit = data.useredit\r\n\r\n                this.getDataBy2(record, data.budgetyear)\r\n\r\n            })\r\n        },\r\n\r\n        getDataBy2 (record, year) {\r\n            var param = {\r\n                OptionSeq: this.getOptionSeq().OptionSeq,\r\n                LineNo: this.$parent.data.PageOrder,\r\n                SubPortfolioCd: this.getDataUser().SubPortfolioCd,\r\n                BudgetNo: record.CLBudgetNo,\r\n                BudgetYear: year\r\n            }\r\n\r\n            this.postEncode(this.getUrlById() + '2', param)\r\n            .then(response => {\r\n                // response from API\r\n                if(response == null) return\r\n                \r\n                var data = response.Data\r\n\r\n                this.budgetDetail = []\r\n\r\n                for (let j = 0; j < data.length; j++) {\r\n                    this.budgetDetail.push({\r\n                        zonecd: data[j].zonecd,\r\n                        zonedescs: data[j].zonedescs,\r\n                        chargeareadescs: data[j].chargeareadescs,\r\n                        chargeperioddescs: data[j].chargeperioddescs,\r\n                        starttooffer: this.momentDate(data[j].starttooffer),\r\n\r\n                        totalarea: data[j].totalarea,\r\n                        rentalrate: data[j].rentalrate,\r\n                        totalrental: data[j].totalrental,\r\n\r\n                        jan: data[j].jan,\r\n                        feb: data[j].feb,\r\n                        mar: data[j].mar,\r\n                        apr: data[j].apr,\r\n                        may: data[j].may,\r\n                        jun: data[j].jun,\r\n                        jul: data[j].jul,\r\n                        aug: data[j].aug,\r\n                        sept: data[j].sept,\r\n                        oct: data[j].oct,\r\n                        nov: data[j].nov,\r\n                        dec: data[j].dec\r\n                    })\r\n\r\n                    this.budgetDetail.push({\r\n                        zonecd: null,\r\n                        zonedescs: null,\r\n                        chargeareadescs: null,\r\n                        chargeperioddescs: null,\r\n                        starttooffer: 'Previous',\r\n                        \r\n                        totalarea: data[j].previoustotalarea,\r\n                        rentalrate: data[j].previousrentalrate,\r\n                        totalrental: data[j].previoustotalrental,\r\n\r\n                        jan: data[j].previousjan,\r\n                        feb: data[j].previousfeb,\r\n                        mar: data[j].previousmar,\r\n                        apr: data[j].previousapr,\r\n                        may: data[j].previousmay,\r\n                        jun: data[j].previousjun,\r\n                        jul: data[j].previousjul,\r\n                        aug: data[j].previousaug,\r\n                        sept: data[j].previoussept,\r\n                        oct: data[j].previousoct,\r\n                        nov: data[j].previousnov,\r\n                        dec: data[j].previousdec\r\n                    })\r\n                }\r\n\r\n                this.$refs.ref_GridCLBudget.allColumn = ['zonecd','zonedescs','chargeareadescs','chargeperioddescs','starttooffer','totalarea','rentalrate','totalrental','jan','feb','mar','apr','may','jun','jul','aug','sept','oct','nov','dec']\r\n                this.$refs.ref_GridCLBudget.fields = []\r\n                this.$refs.ref_GridCLBudget.fieldDecimal = []\r\n                this.$refs.ref_GridCLBudget.setHeaderTable()\r\n                this.$refs.ref_GridCLBudget.items = this.budgetDetail\r\n                this.$refs.ref_GridCLBudget.recalculateTotal()\r\n\r\n                if (this.isOnBlurBudgetYear) {\r\n                    this.getBudgetSource(this.M_TN_CLBudget.budgetyear)\r\n                    this.isOnBlurBudgetYear = false\r\n                }\r\n                \r\n                \r\n                // this.M_TN_CLBudget = {\r\n                //     subportfoliocd: data.subportfoliocd,\r\n                //     clbudgetno: data.clbudgetno,\r\n                //     budgetdate: data.budgetdate,\r\n                //     budgetyear: data.budgetyear,\r\n                //     descs: data.descs,\r\n                //     confirmedby: data.confirmedby,\r\n                //     confirmeddate: data.confirmeddate,\r\n                //     budgetsource: data.budgetsource,\r\n                //     budgetsourceDesc: data.budgetsource == 'R' ? 'Revision' : 'New Budget',\r\n                //     status: data.status,\r\n                //     remarks: data.remarks,\r\n                //     userinput: data.userinput,\r\n                //     useredit: data.useredit,\r\n                //     lastupdatestamp: record.LastUpdateStamp,\r\n                //     rowid: data.rowid\r\n                // }\r\n            })\r\n        }\r\n\r\n    },\r\n    beforeCreate: function () {\r\n    },\r\n    created: function() {\r\n        this.$store.commit('setFormType','List')\r\n        this.getToolbar().ProcessPS()\r\n        // var popo = setInterval(() => {\r\n                // this.fn_getSpecTN()\r\n            //     clearInterval(popo)\r\n            // }, 5000);\r\n        \r\n    },\r\n    beforeMount: function() {\r\n    },\r\n    mounted: function() {\r\n        this.hideSideBarMenu()\r\n        this.FormToABSList().doGetList('','eb_getList')\r\n        this.$refs.ref_GridCLBudget.footClone = false\r\n    },\r\n    beforeUpdate: function() {  \r\n    },\r\n    updated: function() {\r\n    },\r\n    beforeDestroy: function() {\r\n    },\r\n    destroyed: function() {\r\n    }\r\n}\r\n</script>\r\n\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TN_CLBudget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TN_CLBudget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TN_CLBudget.vue?vue&type=template&id=454a1f78&\"\nimport script from \"./TN_CLBudget.vue?vue&type=script&lang=js&\"\nexport * from \"./TN_CLBudget.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"TN_CLBudget.vue\"\nexport default component.exports"],"sourceRoot":""}